{{/* vim: set filetype=gotexttmpl: */ -}}
apiVersion: "extensions/v1beta1"
kind: Deployment
metadata:
  name: {{ include "master.fullname" . }}-controller-manager
  labels:
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
    release: {{ .Release.Name }}
spec:
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  replicas: {{ .Values.api.replicaCount }}
  strategy:
    rollingUpdate:
      maxUnavailable: {{ if eq (toString .Values.api.replicaCount) "1" }}0{{else}}1{{end}}
      maxSurge: 1
  selector:
    matchLabels:
      app: {{ include "master.fullname" . }}-controller-manager
  template:
    metadata:
      labels:
        app: {{ include "master.fullname" . }}-controller-manager
        release: {{ .Release.Name }}
      annotations:
        checksum/secrets: {{ include (print $.Template.BasePath "/secrets.yaml") . | sha256sum }}
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
    spec:
      volumes:
        - name: certs
          secret:
            secretName: {{ .Values.certsSecretName | default (include "master.fullname" .) }}
            items:
              - key: tls-ca.pem
                path: tls-ca.pem
              - key: apiserver-clients-system-kube-controller-manager.pem
                path: kube-client.pem
              - key: apiserver-clients-system-kube-controller-manager-key.pem
                path: kube-client.key
              - key: apiserver-nodes-ca.pem
                path: apiserver-nodes-ca.pem
              - key: apiserver-nodes-ca-key.pem
                path: apiserver-nodes-ca-key.pem
              - key: apiserver-clients-ca.pem
                path: apiserver-clients-ca.pem
              - key: apiserver-clients-ca-key.pem
                path: apiserver-clients-ca-key.pem
        - name: config
          configMap:
            name: {{ include "master.fullname" . }}
        - name: cloudprovider
          secret:
            secretName: {{ include "master.fullname" . }}
            items:
              - key: openstack.config
                path: openstack.config
        - name: openstack-hacks
          configMap:
            name: {{ include "master.fullname" . }}-openstack-hacks
      containers:
        - name: controller-manager
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          args:
            - /hyperkube
            - controller-manager
            - --allocate-node-cidrs=true
            - --cloud-config=/etc/kubernetes/cloudprovider/openstack.config
            - --cloud-provider=openstack
            - --cluster-cidr={{ .Values.clusterCIDR }}
            - --cluster-name=kubernetes
            - --cluster-signing-cert-file=/etc/kubernetes/certs/apiserver-nodes-ca.pem
            - --cluster-signing-key-file=/etc/kubernetes/certs/apiserver-nodes-ca-key.pem
            - --configure-cloud-routes=true
            - --kubeconfig=/etc/kubernetes/config/kubeconfig
            - --root-ca-file=/etc/kubernetes/certs/apiserver-clients-ca.pem
            - --service-account-private-key-file=/etc/kubernetes/certs/apiserver-clients-ca-key.pem
            - --service-cluster-ip-range={{ .Values.serviceCIDR }}
          volumeMounts:
            - mountPath: /etc/kubernetes/certs/
              name: certs
              readOnly: true
            - mountPath: /etc/kubernetes/config
              name: config
              readOnly: true
            - mountPath: /etc/kubernetes/cloudprovider
              name: cloudprovider
              readOnly: true
            - mountPath: /var/lib/cloud/data/
              name: openstack-hacks
              readOnly: true
          resources:
{{ toYaml .Values.controllerManager.resources | indent 12 }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "master.fullname" . }}-openstack-hacks
  labels:
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
    release: {{ .Release.Name }}
data:
  instance-id: gurkenwurst
