{{/* vim: set filetype=gotexttmpl: */ -}}
{{- if .Capabilities.APIVersions.Has "apps/v1" }}
apiVersion: "apps/v1"
{{- else }}
apiVersion: "extensions/v1beta1"
{{- end }}
kind: Deployment
metadata:
  name: {{ include "master.fullname" . }}-scheduler
  labels:
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
    kluster: {{ .Release.Name }}
    release: {{ .Release.Name }}
spec:
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  replicas: {{ .Values.scheduler.replicaCount }}
  strategy:
    rollingUpdate:
      maxUnavailable: {{ if eq (toString .Values.api.replicaCount) "1" }}0{{else}}1{{end}}
      maxSurge: 1
  selector:
    matchLabels:
      app: {{ include "master.fullname" . }}-scheduler
  template:
    metadata:
      labels:
        component: scheduler
        app: {{ include "master.fullname" . }}-scheduler
        release: {{ .Release.Name }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
    spec:
      volumes:
        - name: certs
          secret:
            secretName: {{ .Values.secretName }}
            items:
              - key: tls-ca.pem
                path: tls-ca.pem
              - key: apiserver-clients-system-kube-scheduler.pem
                path: kube-client.pem
              - key: apiserver-clients-system-kube-scheduler-key.pem
                path: kube-client.key
        - name: config
          configMap:
            name: {{ include "master.fullname" . }}
{{- if .Values.scheduler.config }}
        - name: scheduler-config
          configMap:
            name: {{ include "master.fullname" . }}-scheduler
{{- end }}
      containers:
        - name: scheduler
{{- if (semverCompare ">= 1.12" .Values.version.kubernetes) }}
          ports:
          - containerPort: 10259
            name: metrics
            protocol: TCP
{{- end }}
{{- if (semverCompare ">= 1.19" .Values.version.kubernetes) }}
          image: {{ include "scheduler.image" . | quote }}
{{- else }}
          image: {{ include "hyperkube.image" . | quote }}
{{- end }}
          args:
{{- if (semverCompare "< 1.17" .Values.version.kubernetes) }}
            - /hyperkube
{{- end }}
{{- if (semverCompare ">= 1.15" .Values.version.kubernetes) }}
            - kube-scheduler
{{- else }}
            - scheduler
{{- end }}
            - --kubeconfig=/etc/kubernetes/config/kubeconfig
{{- if (semverCompare ">= 1.13" .Values.version.kubernetes) }}
            - --authentication-kubeconfig=/etc/kubernetes/config/kubeconfig
            - --authorization-kubeconfig=/etc/kubernetes/config/kubeconfig
{{- end }}
            - --leader-elect=false
{{- if .Values.scheduler.config }}
            - --config=/etc/kubernetes/scheduler/scheduler.config
{{- end }}
          livenessProbe:
            httpGet:
              path: /healthz
{{- if (semverCompare ">= 1.13" .Values.version.kubernetes) }}
              port: 10259
              scheme: HTTPS
{{- else }}
              port: 10251
              scheme: HTTP
{{- end }}
            initialDelaySeconds: 15
            timeoutSeconds: 15
          volumeMounts:
            - mountPath: /etc/kubernetes/certs
              name: certs
              readOnly: true
            - mountPath: /etc/kubernetes/config
              name: config
              readOnly: true
{{- if .Values.scheduler.config }}
            - mountPath: /etc/kubernetes/scheduler
              name: scheduler-config
              readOnly: true
{{- end}}
          resources:
{{ toYaml .Values.scheduler.resources | indent 12 }}
{{- if .Values.scheduler.config }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "master.fullname" . }}-scheduler
  labels:
    app: {{ include "master.fullname" . }}-scheduler
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
data:
  scheduler.config: |-
{{ toYaml .Values.scheduler.config | indent 4 }}
{{- end}}