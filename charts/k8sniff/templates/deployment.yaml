apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: k8sniff-ingress-lb
  labels:
    role: k8sniff-ingress-lb

spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      role: k8sniff-ingress-lb
  template:
    metadata:
      labels:
        role: k8sniff-ingress-lb
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: {{ .Values.metrics_port | quote }}
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: role
                  operator: In
                  values:
                  - k8sniff-ingress-lb
              topologyKey: kubernetes.io/hostname
      containers:
      - image: "{{ .Values.image }}:{{ .Values.tag }}"
        name: k8sniff-ingress-lb
        imagePullPolicy: IfNotPresent
        command:
          - /pipeline/source/k8sniff
          - -logtostderr
          - --config=/etc/config/k8sniff.json
          - --v={{ default 9 .Values.log_level }}
        readinessProbe:
          httpGet:
            path: /metrics
            port: metrics
          initialDelaySeconds: 5
          periodSeconds: 3
        ports:
        - name: https
          containerPort: 8443
        - name: metrics
          containerPort: {{ .Values.metrics_port }}
        volumeMounts:
        - name: k8sniff-config
          mountPath: /etc/config
          readOnly: true
      volumes:
        - name: k8sniff-config
          configMap:
            name: k8sniff-configmap
