groups:
- name: kubernetes.alerts
  rules:
  - alert: KubernetesNodeManyNotReady
    expr: count(kube_node_status_condition{condition="Ready",status="true"} == 0) > 2
    for: 1h
    labels:
      tier: kks
      service: k8s
      severity: critical
      context: node
      meta: "{{ $labels.instance }}"
      playbook: docs/support/playbook/kubernikus/k8s_node_not_ready.html
    annotations:
      description: Many Nodes are NotReady
      summary: Many ({{$value}}) nodes are NotReady for more than an hour

  - alert: KubernetesNodeNotReady
    expr: kube_node_status_condition{condition="Ready",status="true"} == 0
    for: 1h
    labels:
      tier: kks
      service: k8s
      severity: critical
      context: node
      meta: "{{ $labels.instance }}"
      playbook: docs/support/playbook/kubernikus/k8s_node_not_ready.html
    annotations:
      description: Node status is NotReady
      summary: Node {{$labels.node}} is NotReady for more than an hour

  - alert: KubernetesNodeNotReadyFlapping
    expr: changes(kube_node_status_condition{condition="Ready",status="true"}[15m]) > 2
    for: 1h
    labels:
      tier: kks
      service: k8s
      severity: critical
      context: node
      meta: "{{ $labels.instance }}"
    annotations:
      description: Node readiness is flapping
      summary: Node {{$labels.node}} is flapping between Ready and NotReady

  - alert: KubernetesNodeScrapeMissing
    expr: absent(up{app="kube-state-metrics"})
    for: 1h
    labels:
      tier: kks
      service: k8s
      severity: critical
      context: node
      playbook: docs/support/playbook/kubernetes/k8s_node_scrape_missing.html
    annotations:
      description: Node status cannot be scraped
      summary: Node status failed to be scraped

  - alert: KubernetesPodRestartingTooMuch
    expr: rate(kube_pod_container_status_restarts[15m]) > 0
    for: 1h
    labels:
      tier: kks
      service: resources
      severity: info
      context: pod
      meta: "{{$labels.namespace}}/{{$labels.pod}}"
    annotations:
      description: Pod {{ $labels.namespace }}/{{ $labels.pod }} is in a restart loop
      summary: Pod {{ $labels.namespace }}/{{ $labels.pod }} is restarting constantly

  - alert: KubernetesPVCPendingOrLost
    expr: kube_persistentvolumeclaim_status_phase{phase=~"Pending|Lost"} == 1
    for: 10m
    labels:
      tier: kks
      service: k8s
      severity: info
      context: pvc
    annotations:
      description: "PVC {{ $labels.namespace }}/{{ $labels.persistentvolumeclaim }} stuck in phase {{ $labels.phase }}"
      summary: "PVC stuck in phase {{ $labels.phase }}"

  - alert: PodOOMKilled
    expr: sum(changes(klog_pod_oomkill[24h]) > 0 or ((klog_pod_oomkill == 1) unless (klog_pod_oomkill offset 24h == 1))) by (namespace, pod_name)
    for: 5m
    labels:
      tier: kks
      service: resources
      severity: warning
      context: memory
      meta: "{{ $labels.namespace }}/{{ $labels.pod_name }}"
    annotations:
      summary: Pod was oomkilled recently
      description: The pod {{ $labels.namespace }}/{{ $labels.pod_name }} was hit at least once by the oom killer within 24h

  - alert: PodConstantlyOOMKilled
    expr: sum(changes(klog_pod_oomkill[30m]) ) by (namespace, pod_name) > 2
    for: 5m
    labels:
      tier: kks
      service: resources
      severity: critical
      context: memory
      meta: "{{ $labels.namespace }}/{{ $labels.pod_name }}"
    annotations:
      summary: Pod was oomkilled more then 2 times in 30 minutes
      description: The pod {{ $labels.namespace }}/{{ $labels.pod_name }} killed several times in short succession. This could be due to wrong resource limits.

  - alert: VolumeAttachmentFailed
    expr: sum(increase(volume_mount_error_total[30m])) by (node) > 5 unless sum(increase(volume_mount_success_total[30m])) by (node) > 1
    for: 5m
    labels:
      tier: kks
      service: node
      severity: critical
      context: pvc
      playbook: docs/support/playbook/kubernikus/volume_attachment_failed.html
      meta: "Node {{ $labels.node }}"
      cloudops: "?searchTerm={{ $labels.node }}&type=server"
    annotations:
      summary: Volume attachments are failing for node
      description: The node {{ $labels.node }} is having continous problems attaching volumes. Maybe the node is suffering from an VMware internal lock and needs to be migrated to clear it.

