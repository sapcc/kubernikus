


auth_ap-ae-1: &auth_ap-ae-1
  KUBELOGON_USER:     ((KUBELOGON_USER))
  KUBELOGON_PASSWORD: ((KUBELOGON_PASSWORD))
  KUBERNIKUS_NAME: k-ap-ae-1
  KUBERNIKUS_URL: https://kubernikus.admin.ap-ae-1.cloud.sap

auth_e2e_ap-ae-1: &auth_e2e_ap-ae-1
  CP_KLUSTER: k-ap-ae-1
  CP_KUBERNIKUS_URL: https://kubernikus.admin.ap-ae-1.cloud.sap
  CP_OS_PROJECT_DOMAIN_NAME: ccadmin

  CP_OIDC_AUTH_URL: https://kubernikus.admin.ap-ae-1.cloud.sap/auth/login
  CP_OIDC_CONNECTOR_ID: 9a2d0e1181194fb1bca52e7951666bc3
  CP_OIDC_USERNAME: ((KUBELOGON_USER))
  CP_OIDC_PASSWORD: ((KUBELOGON_PASSWORD))

  KUBERNIKUS_NAME: e2e
  OS_PROJECT_DOMAIN_NAME: ccadmin


  OS_AUTH_URL: https://identity-3.ap-ae-1.cloud.sap/v3
  OS_USERNAME: kubernikus-pipeline
  OS_PASSWORD: ((kubernikus-pipeline-password))
  OS_USER_DOMAIN_NAME: Default
  OS_PROJECT_NAME: kubernikus_e2e
  OS_REGION_NAME: ap-ae-1
  KUBERNIKUS_URL: https://kubernikus.ap-ae-1.cloud.sap
  CP_OS_PROJECT_NAME: kubernikus




auth_ap-au-1: &auth_ap-au-1
  KUBELOGON_USER:     ((KUBELOGON_USER))
  KUBELOGON_PASSWORD: ((KUBELOGON_PASSWORD))
  KUBERNIKUS_NAME: k-ap-au-1
  KUBERNIKUS_URL: https://kubernikus.admin.ap-au-1.cloud.sap

auth_e2e_ap-au-1: &auth_e2e_ap-au-1
  CP_KLUSTER: k-ap-au-1
  CP_KUBERNIKUS_URL: https://kubernikus.admin.ap-au-1.cloud.sap
  CP_OS_PROJECT_DOMAIN_NAME: ccadmin

  CP_OIDC_AUTH_URL: https://kubernikus.admin.ap-au-1.cloud.sap/auth/login
  CP_OIDC_CONNECTOR_ID: f34304c03d2147cc964470c31d00ce97
  CP_OIDC_USERNAME: ((KUBELOGON_USER))
  CP_OIDC_PASSWORD: ((KUBELOGON_PASSWORD))

  KUBERNIKUS_NAME: e2e
  OS_PROJECT_DOMAIN_NAME: ccadmin



  OS_AUTH_URL: https://identity-3.ap-au-1.cloud.sap/v3
  OS_USERNAME: ((kubernikus-prod-username))
  OS_PASSWORD: ((kubernikus-prod-password))
  OS_USER_DOMAIN_NAME: ccadmin
  OS_PROJECT_NAME: kubernikus-e2e
  OS_REGION_NAME: ap-au-1
  KUBERNIKUS_URL: https://kubernikus.ap-au-1.cloud.sap
  CP_OS_PROJECT_NAME: kubernikus



auth_ap-cn-1: &auth_ap-cn-1
  KUBELOGON_USER:     ((KUBELOGON_USER))
  KUBELOGON_PASSWORD: ((KUBELOGON_PASSWORD))
  KUBERNIKUS_NAME: k-ap-cn-1
  KUBERNIKUS_URL: https://kubernikus.admin.ap-cn-1.cloud.sap

auth_e2e_ap-cn-1: &auth_e2e_ap-cn-1
  CP_KLUSTER: k-ap-cn-1
  CP_KUBERNIKUS_URL: https://kubernikus.admin.ap-cn-1.cloud.sap
  CP_OS_PROJECT_DOMAIN_NAME: ccadmin

  CP_OIDC_AUTH_URL: https://kubernikus.admin.ap-cn-1.cloud.sap/auth/login
  CP_OIDC_CONNECTOR_ID: e83ddace725b4c5da605e3f66d266f2c
  CP_OIDC_USERNAME: ((KUBELOGON_USER))
  CP_OIDC_PASSWORD: ((KUBELOGON_PASSWORD))

  KUBERNIKUS_NAME: e2e
  OS_PROJECT_DOMAIN_NAME: ccadmin


  OS_AUTH_URL: https://identity-3.ap-cn-1.cloud.sap/v3
  OS_USERNAME: kubernikus-pipeline
  OS_PASSWORD: ((kubernikus-pipeline-password))
  OS_USER_DOMAIN_NAME: Default
  OS_PROJECT_NAME: kubernikus_e2e
  OS_REGION_NAME: ap-cn-1
  KUBERNIKUS_URL: https://kubernikus.ap-cn-1.cloud.sap
  CP_OS_PROJECT_NAME: kubernikus




auth_ap-jp-1: &auth_ap-jp-1
  KUBELOGON_USER:     ((KUBELOGON_USER))
  KUBELOGON_PASSWORD: ((KUBELOGON_PASSWORD))
  KUBERNIKUS_NAME: k-ap-jp-1
  KUBERNIKUS_URL: https://kubernikus.admin.ap-jp-1.cloud.sap

auth_e2e_ap-jp-1: &auth_e2e_ap-jp-1
  CP_KLUSTER: k-ap-jp-1
  CP_KUBERNIKUS_URL: https://kubernikus.admin.ap-jp-1.cloud.sap
  CP_OS_PROJECT_DOMAIN_NAME: ccadmin

  CP_OIDC_AUTH_URL: https://kubernikus.admin.ap-jp-1.cloud.sap/auth/login
  CP_OIDC_CONNECTOR_ID: b505497ca03e4942a2d0aa50dfbdc7a0
  CP_OIDC_USERNAME: ((KUBELOGON_USER))
  CP_OIDC_PASSWORD: ((KUBELOGON_PASSWORD))

  KUBERNIKUS_NAME: e2e
  OS_PROJECT_DOMAIN_NAME: ccadmin


  OS_AUTH_URL: https://identity-3.ap-jp-1.cloud.sap/v3
  OS_USERNAME: kubernikus-pipeline
  OS_PASSWORD: ((kubernikus-pipeline-password))
  OS_USER_DOMAIN_NAME: Default
  OS_PROJECT_NAME: kubernikus_e2e
  OS_REGION_NAME: ap-jp-1
  KUBERNIKUS_URL: https://kubernikus.ap-jp-1.cloud.sap
  CP_OS_PROJECT_NAME: kubernikus




auth_ap-jp-2: &auth_ap-jp-2
  KUBELOGON_USER:     ((KUBELOGON_USER))
  KUBELOGON_PASSWORD: ((KUBELOGON_PASSWORD))
  KUBERNIKUS_NAME: k-ap-jp-2
  KUBERNIKUS_URL: https://kubernikus.admin.ap-jp-2.cloud.sap

auth_e2e_ap-jp-2: &auth_e2e_ap-jp-2
  CP_KLUSTER: k-ap-jp-2
  CP_KUBERNIKUS_URL: https://kubernikus.admin.ap-jp-2.cloud.sap
  CP_OS_PROJECT_DOMAIN_NAME: ccadmin

  CP_OIDC_AUTH_URL: https://kubernikus.admin.ap-jp-2.cloud.sap/auth/login
  CP_OIDC_CONNECTOR_ID: f34b8aa879334a7fb20e1b96cb1c576e
  CP_OIDC_USERNAME: ((KUBELOGON_USER))
  CP_OIDC_PASSWORD: ((KUBELOGON_PASSWORD))

  KUBERNIKUS_NAME: e2e
  OS_PROJECT_DOMAIN_NAME: ccadmin


  OS_AUTH_URL: https://identity-3.ap-jp-2.cloud.sap/v3
  OS_USERNAME: kubernikus-pipeline
  OS_PASSWORD: ((kubernikus-pipeline-password))
  OS_USER_DOMAIN_NAME: Default
  OS_PROJECT_NAME: kubernikus_e2e
  OS_REGION_NAME: ap-jp-2
  KUBERNIKUS_URL: https://kubernikus.ap-jp-2.cloud.sap
  CP_OS_PROJECT_NAME: kubernikus




auth_ap-sa-1: &auth_ap-sa-1
  KUBELOGON_USER:     ((KUBELOGON_USER))
  KUBELOGON_PASSWORD: ((KUBELOGON_PASSWORD))
  KUBERNIKUS_NAME: k-ap-sa-1
  KUBERNIKUS_URL: https://kubernikus.admin.ap-sa-1.cloud.sap

auth_e2e_ap-sa-1: &auth_e2e_ap-sa-1
  CP_KLUSTER: k-ap-sa-1
  CP_KUBERNIKUS_URL: https://kubernikus.admin.ap-sa-1.cloud.sap
  CP_OS_PROJECT_DOMAIN_NAME: ccadmin

  CP_OIDC_AUTH_URL: https://kubernikus.admin.ap-sa-1.cloud.sap/auth/login
  CP_OIDC_CONNECTOR_ID: 436297dc67b9428f97da11227dc070ec
  CP_OIDC_USERNAME: ((KUBELOGON_USER))
  CP_OIDC_PASSWORD: ((KUBELOGON_PASSWORD))

  KUBERNIKUS_NAME: e2e
  OS_PROJECT_DOMAIN_NAME: ccadmin


  OS_AUTH_URL: https://identity-3.ap-sa-1.cloud.sap/v3
  OS_USERNAME: kubernikus-pipeline
  OS_PASSWORD: ((kubernikus-pipeline-password))
  OS_USER_DOMAIN_NAME: Default
  OS_PROJECT_NAME: kubernikus_e2e
  OS_REGION_NAME: ap-sa-1
  KUBERNIKUS_URL: https://kubernikus.ap-sa-1.cloud.sap
  CP_OS_PROJECT_NAME: kubernikus




auth_ap-sa-2: &auth_ap-sa-2
  KUBELOGON_USER:     ((KUBELOGON_USER))
  KUBELOGON_PASSWORD: ((KUBELOGON_PASSWORD))
  KUBERNIKUS_NAME: k-ap-sa-2
  KUBERNIKUS_URL: https://kubernikus.admin.ap-sa-2.cloud.sap

auth_e2e_ap-sa-2: &auth_e2e_ap-sa-2
  CP_KLUSTER: k-ap-sa-2
  CP_KUBERNIKUS_URL: https://kubernikus.admin.ap-sa-2.cloud.sap
  CP_OS_PROJECT_DOMAIN_NAME: ccadmin

  CP_OIDC_AUTH_URL: https://kubernikus.admin.ap-sa-2.cloud.sap/auth/login
  CP_OIDC_CONNECTOR_ID: 37c3822fe4194ab586d9625d81b9d532
  CP_OIDC_USERNAME: ((KUBELOGON_USER))
  CP_OIDC_PASSWORD: ((KUBELOGON_PASSWORD))

  KUBERNIKUS_NAME: e2e
  OS_PROJECT_DOMAIN_NAME: ccadmin


  OS_AUTH_URL: https://identity-3.ap-sa-2.cloud.sap/v3
  OS_USERNAME: kubernikus-pipeline
  OS_PASSWORD: ((kubernikus-pipeline-password))
  OS_USER_DOMAIN_NAME: Default
  OS_PROJECT_NAME: kubernikus_e2e
  OS_REGION_NAME: ap-sa-2
  KUBERNIKUS_URL: https://kubernikus.ap-sa-2.cloud.sap
  CP_OS_PROJECT_NAME: kubernikus




auth_eu-de-1: &auth_eu-de-1
  KUBELOGON_USER:     ((KUBELOGON_USER))
  KUBELOGON_PASSWORD: ((KUBELOGON_PASSWORD))
  KUBERNIKUS_NAME: k-eu-de-1
  KUBERNIKUS_URL: https://kubernikus.admin.eu-de-1.cloud.sap

auth_e2e_eu-de-1: &auth_e2e_eu-de-1
  CP_KLUSTER: k-eu-de-1
  CP_KUBERNIKUS_URL: https://kubernikus.admin.eu-de-1.cloud.sap
  CP_OS_PROJECT_DOMAIN_NAME: ccadmin

  CP_OIDC_AUTH_URL: https://kubernikus.admin.eu-de-1.cloud.sap/auth/login
  CP_OIDC_CONNECTOR_ID: d7df5ce6c37643e49b3c93528c29818b
  CP_OIDC_USERNAME: ((KUBELOGON_USER))
  CP_OIDC_PASSWORD: ((KUBELOGON_PASSWORD))

  KUBERNIKUS_NAME: e2e
  OS_PROJECT_DOMAIN_NAME: ccadmin



  OS_AUTH_URL: https://identity-3.eu-de-1.cloud.sap/v3
  OS_USERNAME: ((kubernikus-prod-username))
  OS_PASSWORD: ((kubernikus-prod-password))
  OS_USER_DOMAIN_NAME: ccadmin
  OS_PROJECT_NAME: kubernikus-e2e
  OS_REGION_NAME: eu-de-1
  KUBERNIKUS_URL: https://kubernikus.eu-de-1.cloud.sap
  CP_OS_PROJECT_NAME: kubernikus



auth_eu-de-2: &auth_eu-de-2
  KUBELOGON_USER:     ((KUBELOGON_USER))
  KUBELOGON_PASSWORD: ((KUBELOGON_PASSWORD))
  KUBERNIKUS_NAME: k-eu-de-2
  KUBERNIKUS_URL: https://kubernikus.admin.eu-de-2.cloud.sap

auth_e2e_eu-de-2: &auth_e2e_eu-de-2
  CP_KLUSTER: k-eu-de-2
  CP_KUBERNIKUS_URL: https://kubernikus.admin.eu-de-2.cloud.sap
  CP_OS_PROJECT_DOMAIN_NAME: ccadmin

  CP_OIDC_AUTH_URL: https://kubernikus.admin.eu-de-2.cloud.sap/auth/login
  CP_OIDC_CONNECTOR_ID: 57da32d8d50d49a9a9fbbe6b890e9e13
  CP_OIDC_USERNAME: ((KUBELOGON_USER))
  CP_OIDC_PASSWORD: ((KUBELOGON_PASSWORD))

  KUBERNIKUS_NAME: e2e
  OS_PROJECT_DOMAIN_NAME: ccadmin



  OS_AUTH_URL: https://identity-3.eu-de-2.cloud.sap/v3
  OS_USERNAME: ((kubernikus-prod-username))
  OS_PASSWORD: ((kubernikus-prod-password))
  OS_USER_DOMAIN_NAME: ccadmin
  OS_PROJECT_NAME: kubernikus-e2e
  OS_REGION_NAME: eu-de-2
  KUBERNIKUS_URL: https://kubernikus.eu-de-2.cloud.sap
  CP_OS_PROJECT_NAME: kubernikus



auth_eu-nl-1: &auth_eu-nl-1
  KUBELOGON_USER:     ((KUBELOGON_USER))
  KUBELOGON_PASSWORD: ((KUBELOGON_PASSWORD))
  KUBERNIKUS_NAME: k-eu-nl-1
  KUBERNIKUS_URL: https://kubernikus.admin.eu-nl-1.cloud.sap

auth_e2e_eu-nl-1: &auth_e2e_eu-nl-1
  CP_KLUSTER: k-eu-nl-1
  CP_KUBERNIKUS_URL: https://kubernikus.admin.eu-nl-1.cloud.sap
  CP_OS_PROJECT_DOMAIN_NAME: ccadmin

  CP_OIDC_AUTH_URL: https://kubernikus.admin.eu-nl-1.cloud.sap/auth/login
  CP_OIDC_CONNECTOR_ID: d9b056a6762649f684a8a02b30f38324
  CP_OIDC_USERNAME: ((KUBELOGON_USER))
  CP_OIDC_PASSWORD: ((KUBELOGON_PASSWORD))

  KUBERNIKUS_NAME: e2e
  OS_PROJECT_DOMAIN_NAME: ccadmin


  OS_AUTH_URL: https://identity-3.eu-nl-1.cloud.sap/v3
  OS_USERNAME: kubernikus-pipeline
  OS_PASSWORD: ((kubernikus-pipeline-password))
  OS_USER_DOMAIN_NAME: Default
  OS_PROJECT_NAME: kubernikus_e2e
  OS_REGION_NAME: eu-nl-1
  KUBERNIKUS_URL: https://kubernikus.eu-nl-1.cloud.sap
  CP_OS_PROJECT_NAME: kubernikus




auth_eu-ru-1: &auth_eu-ru-1
  KUBELOGON_USER:     ((KUBELOGON_USER))
  KUBELOGON_PASSWORD: ((KUBELOGON_PASSWORD))
  KUBERNIKUS_NAME: k-eu-ru-1
  KUBERNIKUS_URL: https://kubernikus.admin.eu-ru-1.cloud.sap

auth_e2e_eu-ru-1: &auth_e2e_eu-ru-1
  CP_KLUSTER: k-eu-ru-1
  CP_KUBERNIKUS_URL: https://kubernikus.admin.eu-ru-1.cloud.sap
  CP_OS_PROJECT_DOMAIN_NAME: ccadmin

  CP_OIDC_AUTH_URL: https://kubernikus.admin.eu-ru-1.cloud.sap/auth/login
  CP_OIDC_CONNECTOR_ID: eb31733cfb9d4ab283bb19e00863b780
  CP_OIDC_USERNAME: ((KUBELOGON_USER))
  CP_OIDC_PASSWORD: ((KUBELOGON_PASSWORD))

  KUBERNIKUS_NAME: e2e
  OS_PROJECT_DOMAIN_NAME: ccadmin


  OS_AUTH_URL: https://identity-3.eu-ru-1.cloud.sap/v3
  OS_USERNAME: kubernikus-pipeline
  OS_PASSWORD: ((kubernikus-pipeline-password))
  OS_USER_DOMAIN_NAME: Default
  OS_PROJECT_NAME: kubernikus_e2e
  OS_REGION_NAME: eu-ru-1
  KUBERNIKUS_URL: https://kubernikus.eu-ru-1.cloud.sap
  CP_OS_PROJECT_NAME: kubernikus




auth_la-br-1: &auth_la-br-1
  KUBELOGON_USER:     ((KUBELOGON_USER))
  KUBELOGON_PASSWORD: ((KUBELOGON_PASSWORD))
  KUBERNIKUS_NAME: k-la-br-1
  KUBERNIKUS_URL: https://kubernikus.admin.la-br-1.cloud.sap

auth_e2e_la-br-1: &auth_e2e_la-br-1
  CP_KLUSTER: k-la-br-1
  CP_KUBERNIKUS_URL: https://kubernikus.admin.la-br-1.cloud.sap
  CP_OS_PROJECT_DOMAIN_NAME: ccadmin

  CP_OIDC_AUTH_URL: https://kubernikus.admin.la-br-1.cloud.sap/auth/login
  CP_OIDC_CONNECTOR_ID: b33ac00cb0004d50bb34eb4e4cbbeb54
  CP_OIDC_USERNAME: ((KUBELOGON_USER))
  CP_OIDC_PASSWORD: ((KUBELOGON_PASSWORD))

  KUBERNIKUS_NAME: e2e
  OS_PROJECT_DOMAIN_NAME: ccadmin


  OS_AUTH_URL: https://identity-3.la-br-1.cloud.sap/v3
  OS_USERNAME: kubernikus-pipeline
  OS_PASSWORD: ((kubernikus-pipeline-password))
  OS_USER_DOMAIN_NAME: Default
  OS_PROJECT_NAME: kubernikus_e2e
  OS_REGION_NAME: la-br-1
  KUBERNIKUS_URL: https://kubernikus.la-br-1.cloud.sap
  CP_OS_PROJECT_NAME: kubernikus




auth_na-ca-1: &auth_na-ca-1
  KUBELOGON_USER:     ((KUBELOGON_USER))
  KUBELOGON_PASSWORD: ((KUBELOGON_PASSWORD))
  KUBERNIKUS_NAME: k-na-ca-1
  KUBERNIKUS_URL: https://kubernikus.admin.na-ca-1.cloud.sap

auth_e2e_na-ca-1: &auth_e2e_na-ca-1
  CP_KLUSTER: k-na-ca-1
  CP_KUBERNIKUS_URL: https://kubernikus.admin.na-ca-1.cloud.sap
  CP_OS_PROJECT_DOMAIN_NAME: ccadmin

  CP_OIDC_AUTH_URL: https://kubernikus.admin.na-ca-1.cloud.sap/auth/login
  CP_OIDC_CONNECTOR_ID: b7269ea1dde54a6383453ab69f25cce4
  CP_OIDC_USERNAME: ((KUBELOGON_USER))
  CP_OIDC_PASSWORD: ((KUBELOGON_PASSWORD))

  KUBERNIKUS_NAME: e2e
  OS_PROJECT_DOMAIN_NAME: ccadmin


  OS_AUTH_URL: https://identity-3.na-ca-1.cloud.sap/v3
  OS_USERNAME: kubernikus-pipeline
  OS_PASSWORD: ((kubernikus-pipeline-password))
  OS_USER_DOMAIN_NAME: Default
  OS_PROJECT_NAME: kubernikus_e2e
  OS_REGION_NAME: na-ca-1
  KUBERNIKUS_URL: https://kubernikus.na-ca-1.cloud.sap
  CP_OS_PROJECT_NAME: kubernikus




auth_na-us-1: &auth_na-us-1
  KUBELOGON_USER:     ((KUBELOGON_USER))
  KUBELOGON_PASSWORD: ((KUBELOGON_PASSWORD))
  KUBERNIKUS_NAME: k-na-us-1
  KUBERNIKUS_URL: https://kubernikus.admin.na-us-1.cloud.sap

auth_e2e_na-us-1: &auth_e2e_na-us-1
  CP_KLUSTER: k-na-us-1
  CP_KUBERNIKUS_URL: https://kubernikus.admin.na-us-1.cloud.sap
  CP_OS_PROJECT_DOMAIN_NAME: ccadmin

  CP_OIDC_AUTH_URL: https://kubernikus.admin.na-us-1.cloud.sap/auth/login
  CP_OIDC_CONNECTOR_ID: 040ed45cb5d8403790cf341a26c50601
  CP_OIDC_USERNAME: ((KUBELOGON_USER))
  CP_OIDC_PASSWORD: ((KUBELOGON_PASSWORD))

  KUBERNIKUS_NAME: e2e
  OS_PROJECT_DOMAIN_NAME: ccadmin

  NODEPOOL_AVZ: na-us-1b



  OS_AUTH_URL: https://identity-3.na-us-1.cloud.sap/v3
  OS_USERNAME: ((kubernikus-prod-username))
  OS_PASSWORD: ((kubernikus-prod-password))
  OS_USER_DOMAIN_NAME: ccadmin
  OS_PROJECT_NAME: kubernikus-e2e
  OS_REGION_NAME: na-us-1
  KUBERNIKUS_URL: https://kubernikus.na-us-1.cloud.sap
  CP_OS_PROJECT_NAME: kubernikus



auth_na-us-2: &auth_na-us-2
  KUBELOGON_USER:     ((KUBELOGON_USER))
  KUBELOGON_PASSWORD: ((KUBELOGON_PASSWORD))
  KUBERNIKUS_NAME: k-na-us-2
  KUBERNIKUS_URL: https://kubernikus.admin.na-us-2.cloud.sap

auth_e2e_na-us-2: &auth_e2e_na-us-2
  CP_KLUSTER: k-na-us-2
  CP_KUBERNIKUS_URL: https://kubernikus.admin.na-us-2.cloud.sap
  CP_OS_PROJECT_DOMAIN_NAME: ccadmin

  CP_OIDC_AUTH_URL: https://kubernikus.admin.na-us-2.cloud.sap/auth/login
  CP_OIDC_CONNECTOR_ID: fc0f2b8450e1444197609800c8b5c4cb
  CP_OIDC_USERNAME: ((KUBELOGON_USER))
  CP_OIDC_PASSWORD: ((KUBELOGON_PASSWORD))

  KUBERNIKUS_NAME: e2e
  OS_PROJECT_DOMAIN_NAME: ccadmin


  OS_AUTH_URL: https://identity-3.na-us-2.cloud.sap/v3
  OS_USERNAME: kubernikus-pipeline
  OS_PASSWORD: ((kubernikus-pipeline-password))
  OS_USER_DOMAIN_NAME: Default
  OS_PROJECT_NAME: kubernikus_e2e
  OS_REGION_NAME: na-us-2
  KUBERNIKUS_URL: https://kubernikus.na-us-2.cloud.sap
  CP_OS_PROJECT_NAME: kubernikus




auth_na-us-3: &auth_na-us-3
  KUBELOGON_USER:     ((KUBELOGON_USER))
  KUBELOGON_PASSWORD: ((KUBELOGON_PASSWORD))
  KUBERNIKUS_NAME: k-na-us-3
  KUBERNIKUS_URL: https://kubernikus.admin.na-us-3.cloud.sap

auth_e2e_na-us-3: &auth_e2e_na-us-3
  CP_KLUSTER: k-na-us-3
  CP_KUBERNIKUS_URL: https://kubernikus.admin.na-us-3.cloud.sap
  CP_OS_PROJECT_DOMAIN_NAME: ccadmin

  CP_OIDC_AUTH_URL: https://kubernikus.admin.na-us-3.cloud.sap/auth/login
  CP_OIDC_CONNECTOR_ID: aa579369ca944a41bccb76f49f20924f
  CP_OIDC_USERNAME: ((KUBELOGON_USER))
  CP_OIDC_PASSWORD: ((KUBELOGON_PASSWORD))

  KUBERNIKUS_NAME: e2e
  OS_PROJECT_DOMAIN_NAME: ccadmin


  OS_AUTH_URL: https://identity-3.na-us-3.cloud.sap/v3
  OS_USERNAME: kubernikus-pipeline
  OS_PASSWORD: ((kubernikus-pipeline-password))
  OS_USER_DOMAIN_NAME: Default
  OS_PROJECT_NAME: kubernikus_e2e
  OS_REGION_NAME: na-us-3
  KUBERNIKUS_URL: https://kubernikus.na-us-3.cloud.sap
  CP_OS_PROJECT_NAME: kubernikus




auth_qa-de-1: &auth_qa-de-1
  KUBELOGON_USER:     ((KUBELOGON_USER))
  KUBELOGON_PASSWORD: ((KUBELOGON_PASSWORD))
  KUBERNIKUS_NAME: k-qa-de-1
  KUBERNIKUS_URL: https://kubernikus.admin.qa-de-1.cloud.sap

auth_e2e_qa-de-1: &auth_e2e_qa-de-1
  CP_KLUSTER: k-qa-de-1
  CP_KUBERNIKUS_URL: https://kubernikus.admin.qa-de-1.cloud.sap
  CP_OS_PROJECT_DOMAIN_NAME: ccadmin

  CP_OIDC_AUTH_URL: https://kubernikus.admin.qa-de-1.cloud.sap/auth/login
  CP_OIDC_CONNECTOR_ID: ce5462b173184391a9b47b486fabe580
  CP_OIDC_USERNAME: ((KUBELOGON_USER))
  CP_OIDC_PASSWORD: ((KUBELOGON_PASSWORD))

  KUBERNIKUS_NAME: e2e
  OS_PROJECT_DOMAIN_NAME: ccadmin

  NODEPOOL_AVZ: qa-de-1a


  OS_AUTH_URL: https://identity-3.qa-de-1.cloud.sap/v3
  OS_USERNAME: kubernikus-pipeline
  OS_PASSWORD: ((kubernikus-pipeline-password))
  OS_USER_DOMAIN_NAME: Default
  OS_PROJECT_NAME: kubernikus_e2e
  OS_REGION_NAME: qa-de-1
  KUBERNIKUS_URL: https://kubernikus.qa-de-1.cloud.sap
  CP_OS_PROJECT_NAME: kubernikus




auth_master: &auth_master
  KUBELOGON_USER:     ((KUBELOGON_USER))
  KUBELOGON_PASSWORD: ((KUBELOGON_PASSWORD))
  KUBERNIKUS_NAME: k-master
  KUBERNIKUS_URL: https://kubernikus.admin.eu-nl-1.cloud.sap

auth_e2e_master: &auth_e2e_master
  CP_KLUSTER: k-master
  CP_KUBERNIKUS_URL: https://kubernikus.admin.eu-nl-1.cloud.sap
  CP_OS_PROJECT_DOMAIN_NAME: ccadmin

  CP_OIDC_AUTH_URL: https://kubernikus.admin.eu-nl-1.cloud.sap/auth/login
  CP_OIDC_CONNECTOR_ID: a8b6853024494e1eb56136025b04866b
  CP_OIDC_USERNAME: ((KUBELOGON_USER))
  CP_OIDC_PASSWORD: ((KUBELOGON_PASSWORD))

  KUBERNIKUS_NAME: e2e
  OS_PROJECT_DOMAIN_NAME: ccadmin




  OS_AUTH_URL: https://identity-3.eu-nl-1.cloud.sap/v3
  OS_USERNAME: ((kubernikus-prod-username))
  OS_PASSWORD: ((kubernikus-prod-password))
  OS_USER_DOMAIN_NAME: ccadmin
  OS_PROJECT_NAME: kubernikus-e2e
  OS_REGION_NAME: eu-nl-1
  KUBERNIKUS_URL: https://kubernikus-master.eu-nl-1.cloud.sap
  CP_OS_PROJECT_NAME: kubernikus-master




task_build_args: &task_build_args
  platform: linux
  image_resource:
    type: registry-image
    source:
      repository: keppel.eu-de-2.cloud.sap/ccloud-dockerhub-mirror/library/alpine
  inputs:
    - name: docs-builder.image
    - name: kubernikus.git
  outputs:
    - name: kubernikus.git
  run:
    path: sh
    args:
      - -exc
      - |
        SHA=$(cat kubernikus.git/.git/ref)
        DIGEST=$(cat docs-builder.image/digest)
        echo "VERSION=$SHA" > kubernikus.git/build-args.txt
        echo "DOCS_IMAGE=keppel.eu-de-1.cloud.sap/ccloud/kubernikus-docs-builder@$DIGEST" >> kubernikus.git/build-args.txt
  

task_checksum: &task_checksum
  platform: 'linux'
  
  image_resource:
    type: registry-image
    source:
      repository: keppel.eu-de-2.cloud.sap/ccloud-dockerhub-mirror/library/golang
      tag: 1.14-alpine
  
  inputs:
    - name: kubernikus.builds
      path: gopath/src/github.com/sapcc/kubernikus
  outputs:
    - name: checksum
  
  run:
    path: /bin/sh
    args:
      - -c
      - |
        set -exo pipefail
        if [ -z "$TARGET" ]; then
          echo TARGET not set
          exit 1
        fi
        export GOPATH=$PWD/gopath
        OUTPUT=$PWD/checksum
        cd gopath/src/github.com/sapcc/kubernikus
        apk add --no-cache make
        make $TARGET VERSION=latest
        CHECKSUM=$(sha256sum $TARGET | cut -f1 -d ' ')
        echo checksum=$CHECKSUM > $OUTPUT/properties
  params:
    TARGET:
  

task_cli: &task_cli
  platform: 'linux'
  
  image_resource:
    type: registry-image
    source:
      repository: keppel.eu-de-2.cloud.sap/ccloud-dockerhub-mirror/library/golang
      tag: 1.14-alpine
  inputs:
    - name: kubernikus.builds
      path: gopath/src/github.com/sapcc/kubernikus
  outputs:
    - name: binaries
  
  run:
    path: /bin/sh
    args:
      - -exc
      - |
        export BINARIES=$(pwd -P)/binaries
        export GOPATH=$PWD/gopath
        export CGO_ENABLED=0
  
        cd gopath/src/github.com/sapcc/kubernikus
        apk add --no-cache upx make git
  
        make bin/darwin/kubernikusctl
        make bin/linux/kubernikusctl
        make bin/windows/kubernikusctl.exe
        upx bin/linux/*
        #upx trips up the macaffee virus scanner https://convergedcloud.slack.com/archives/C8296QQUW/p1605530103201800
        #upx bin/windows/*
        # upx is broken on big sur https://github.com/upx/upx/issues/424
        SHA=$(git rev-parse HEAD)
        echo $SHA > $BINARIES/commitish
        echo "1.0.0+$SHA" > $BINARIES/tag
  
        cp bin/darwin/kubernikusctl $BINARIES/kubernikusctl_darwin_amd64
        cp bin/linux/kubernikusctl $BINARIES/kubernikusctl_linux_amd64
        cp bin/windows/kubernikusctl.exe $BINARIES/kubernikusctl_windows_amd64.exe
  
  params:
  

task_e2e_tests: &task_e2e_tests
  platform: 'linux'
  
  image_resource:
    type: registry-image
    source:
      repository: keppel.eu-de-2.cloud.sap/ccloud-dockerhub-mirror/library/golang
      tag: 1.14-alpine
  
  inputs:
    - name: kubernikus.builds
      path: gopath/src/github.com/sapcc/kubernikus
  outputs:
    - name: test-result
  caches:
    - path: cache
  run:
    path: /bin/sh
    args:
      - -c
      - |
        set -o pipefail
        OUTPUT_DIR=$PWD/test-result
        export GOPATH=$PWD/gopath
        cd gopath/src/github.com/sapcc/kubernikus
  
        apk add --no-progress --no-cache make git curl
        export RUN_PARALLEL=false
        export CGO_ENABLED=0
        make test-e2e | tee test.output
        rc=$?
        #Get the longest uniq (!) whitespace prefix of --- FAIL: lines
        if [ $rc -ne 0 ] ; then
          ws_count=$(grep -- '--- FAIL:' test.output| grep -v -- '->'| awk '{ match($0, /^ */); printf("%d\n", RLENGTH, substr($0,RLENGTH+1)) }' | sort|uniq -u |tail -1)
          test_name=$(sed -n -E  "s/^ {$ws_count}--- FAIL: (.*) \([.0-9]*s\)$/\1/p" test.output)
          echo "Test $test_name has failed" > $OUTPUT_DIR/content
        fi
        exit $rc
  
  params:
    OS_AUTH_URL:
    OS_USERNAME:
    OS_PASSWORD:
    OS_USER_DOMAIN_NAME:
    OS_PROJECT_NAME:
    OS_PROJECT_DOMAIN_NAME:
    OS_REGION_NAME:
    CP_OS_PROJECT_NAME:
    CP_OS_PROJECT_DOMAIN_NAME:
    CP_OIDC_AUTH_URL:
    CP_OIDC_CONNECTOR_ID:
    CP_OIDC_USERNAME:
    CP_OIDC_PASSWORD:
    CP_KUBERNIKUS_URL:
    CP_KLUSTER:
    NODEPOOL_AVZ:
  

task_github_compare_url: &task_github_compare_url
  platform: 'linux'
  
  image_resource:
    type: registry-image
    source:
      repository: keppel.eu-de-2.cloud.sap/ccloud-dockerhub-mirror/library/alpine
  inputs:
    - name: kubernikus.builds
  outputs:
  
  run:
    path: /bin/sh
    args:
      - -ec
      - |
        VERSION=$(cat kubernikus.builds/.git/HEAD)
        echo "Go to this link to see the changes in master since the last prod release:"
        echo
        echo "  https://github.com/sapcc/kubernikus/compare/${VERSION}...master"
  
  

task_helm_kubernikus-dex: &task_helm_kubernikus-dex
  platform: "linux"
  
  image_resource:
    type: registry-image
    source:
      repository: keppel.eu-de-2.cloud.sap/ccloud-dockerhub-mirror/sapcc/unified-kubernetes-toolbox
      tag: 'latest'
  
  inputs:
    - name: kubernikus.builds
    - name: secrets.git
  
  run:
    path: /bin/sh
    args:
      - -c
      - |
        set -exo pipefail
  
        # recent helm versions fails with `invalid cross-device link` when trying to rename charts.git
        # rename(2) for a directory is allowed only when both the source and the destination path are on the top layer
        # https://github.com/kubernetes/helm/issues/2998
        cp -a kubernikus.builds kubernikus-copy.builds
  
        # Dependencies are currently vendored.
        # helm repo add sapcc https://charts.global.cloud.sap
        helm dep up kubernikus-copy.builds/charts/kubernikus-dex/
  
        touch /tmp/kubernikus-dex.yaml
        [[ "${KUBERNIKUS_NAME}" == "k-master" ]] && printf "dex:\n  dns:\n    zone: ingress.kubernikus-master" > /tmp/kubernikus-dex.yaml
  
        helm diff upgrade kubernikus-dex kubernikus-copy.builds/charts/kubernikus-dex/ \
          --values secrets.git/$REGION/values/keystone.yaml \
          --values secrets.git/$REGION/values/globals.yaml \
          --values /tmp/kubernikus-dex.yaml \
          --suppress-secrets --allow-unreleased --context 5
  
        helm upgrade kubernikus-dex kubernikus-copy.builds/charts/kubernikus-dex/ \
          --values secrets.git/$REGION/values/keystone.yaml \
          --values secrets.git/$REGION/values/globals.yaml \
          --values /tmp/kubernikus-dex.yaml \
          --namespace=kubernikus \
          --install
  
  params:
    REGION:
    CONTEXT:
    KUBELOGON_USER:
    KUBELOGON_PASSWORD:
    KUBERNIKUS_NAME:
    KUBERNIKUS_URL:
    HELM_VERSION: 2.11.0
  

task_helm_kubernikus: &task_helm_kubernikus
  platform: 'linux'
  
  image_resource:
    type: registry-image
    source:
      repository: keppel.eu-de-2.cloud.sap/ccloud-dockerhub-mirror/sapcc/unified-kubernetes-toolbox
      tag: 'latest'
  
  inputs:
    - name: kubernikus.builds
    - name: secrets.git
  
  run:
    path: /bin/sh
    args:
      - -c
      - |
        set -exo pipefail
        VERSION=$(cat kubernikus.builds/.git/HEAD)
        helm dep up --skip-refresh kubernikus.builds/charts/kubernikus/
  
        IMAGE=keppel.$REGION.cloud.sap/ccloud/kubernikus
        [ "$REGION" = "qa-de-1" ] && IMAGE=keppel.eu-de-1.cloud.sap/ccloud/kubernikus
  
        keppel validate $IMAGE:$VERSION
  
        helm diff upgrade kubernikus kubernikus.builds/charts/kubernikus/ \
          --suppress-secrets --allow-unreleased --context 5 \
          --values secrets.git/global/values/kubernikus.yaml \
          --values secrets.git/kubernikus/$KUBERNIKUS_NAME/values/kubernikus.yaml \
          --set image=$IMAGE \
          --set imageTag=$VERSION
  
        helm upgrade kubernikus kubernikus.builds/charts/kubernikus/ \
          --namespace=kubernikus-system \
          --values secrets.git/global/values/kubernikus.yaml \
          --values secrets.git/kubernikus/$KUBERNIKUS_NAME/values/kubernikus.yaml \
          --set image=$IMAGE \
          --set imageTag=$VERSION \
          --install
        kubectl rollout status deployment/kubernikus-api --namespace=kubernikus-system
        kubectl rollout status deployment/kubernikus-operator --namespace=kubernikus-system
        kubectl rollout status deployment/k8sniff-ingress-lb --namespace=kubernikus-system
  
  params:
    REGION:
    CONTEXT:
    KUBELOGON_USER:
    KUBELOGON_PASSWORD:
    KUBERNIKUS_NAME:
    KUBERNIKUS_URL:
    HELM_VERSION: 2.11.0
  

task_helm_seed: &task_helm_seed
  platform: linux
  
  image_resource:
    type: registry-image
    source:
      repository: keppel.eu-de-2.cloud.sap/ccloud-dockerhub-mirror/sapcc/unified-kubernetes-toolbox
      tag: 'latest'
  
  inputs:
    - name: secrets.git
    - name: helm-charts.git
  
  run:
    path: sh
    args:
      - -exc
      - |
        set -o pipefail
        helm upgrade $RELEASE helm-charts.git/openstack/kubernikus --namespace $NAMESPACE --values secrets.git/global/values/kubernikus-seed.yaml --values secrets.git/$REGION/values/globals.yaml  --install
  
  params:
    REGION:
    CONTEXT:
    KUBELOGON_USER:
    KUBELOGON_PASSWORD:
    NAMESPACE: monsoon3
    RELEASE: kubernikus
    HELM_VERSION: 3.2.4
  

task_oci_build: &task_oci_build
  platform: linux
  image_resource:
    type: registry-image
    source:
      repository: keppel.eu-de-2.cloud.sap/ci/oci-build-task
      #repository: vito/oci-build-task
  
  inputs:
  - name: context
  
  outputs:
  - name: image
  
  caches:
  - path: cache
  
  run:
    #path: build
    path: sh
    args:
    - -ec
    - |
      echo Executing on $(wget -q -O- http://169.254.169.254/latest/meta-data/local-hostname)
      du -hs cache/
      build
  params:
    DEBUG: true
    DOCKERFILE:
    CONTEXT: context
    BUILD_ARGS_FILE:
  

task_tiller: &task_tiller
  platform: 'linux'
  
  image_resource:
    type: registry-image
    source:
      repository: keppel.eu-de-2.cloud.sap/ccloud-dockerhub-mirror/sapcc/unified-kubernetes-toolbox
      tag: 'latest'
  
  inputs:
    - name: tiller-version.git
  
  run:
    path: /bin/sh
    args:
      - -c
      - |
        set -exo pipefail
        tag=$(cat tiller-version.git/kubernikus/tiller.version)
        if [ -f tiller-version.git/kubernikus/$KUBERNIKUS_NAME/tiller.version ]; then
          tag=$(cat tiller-version.git/kubernikus/$KUBERNIKUS_NAME/tiller.version )
        fi
        if kubectl get deployment tiller-deploy --namespace=kube-system >/dev/null ; then
          kubectl set image --namespace=kube-system deployment/tiller-deploy tiller=sapcc/tiller:$tag
        else
          kubectl create sa tiller --namespace kube-system
          kubectl create clusterrolebinding tiller --clusterrole cluster-admin --serviceaccount=kube-system:tiller
          helm init --service-account tiller --history-max 5 --tiller-image sapcc/tiller:$tag --upgrade --wait
        fi
  
  params:
    REGION:
    CONTEXT:
    KUBELOGON_USER:
    KUBELOGON_PASSWORD:
    KUBERNIKUS_NAME:
    KUBERNIKUS_URL:
    HELM_VERSION: 2.11.0
  

task_whitesource: &task_whitesource
  platform: 'linux'
  
  image_resource:
    type: registry-image
    source:
      repository: keppel.eu-de-2.cloud.sap/ccloud/whitesource-agent
      tag: 20.1.3-kubernikus
  inputs:
    - name: kubernikus.builds
  
  run:
    path: /bin/sh
    args:
      - -c
      - |
        set -e
        export TZ=UTC
  
        cat >/wss-unified-agent.config <<EOF
        ####################################################################
        # WhiteSource Unified-Agent configuration file for GO
        # GENERAL SCAN MODE: Package Managers only
        ####################################################################
  
        # !!! Important for WhiteSource "DIST - *" Products:
        # Please set
        #   checkPolicies=false
        #   forceCheckAllDependencies=false
        # since Policy checks are not applicable for Security scans and also
        # not suitable for DIST category. CheckPolicies just cover IP scan
        # related license checks for SAP hosted cloud products only ("SHC - *").
        checkPolicies=false
        forceCheckAllDependencies=false
        
        # forceUpdate is important and need to be true
        forceUpdate=true
        # failBuildOnPolicyViolation:
        # If the flag is true, the Unified Agent exit code will be the result of the policy check.
        # If the flag is false, the Unified Agent exit code will be the result of the scan.
        forceUpdate.failBuildOnPolicyViolation=false
        # offline parameter is important and need to be false
        offline=false
        
        # ignoreSourceFiles is important and need to be true
        ignoreSourceFiles=true
        # resolveAllDependencies is important and need to be false
        resolveAllDependencies=false
        
        #wss.connectionTimeoutMinutes=60
        # URL to your WhiteSource server.
        wss.url=https://saas.whitesourcesoftware.com/agent
        
        # resolveDependencies parameter is important and need to be true
        go.resolveDependencies=true
        # ignoreSourceFiles parameter is important and need to be true
        go.ignoreSourceFiles=true
        go.collectDependenciesAtRuntime=false
        # dependencyManager: Determines the Go dependency manager to use when scanning a Go project.
        # Valid values are 'dep', 'godep', 'vndr', 'gogradle', 'glide', 'govendor', and 'gopm'.
        # If empty, then the Unified Agent will try to resolve the dependencies using each one
        # of the package managers above.
        go.dependencyManager=glide
        go.glide.ignoreTestPackages=false
        #go.gogradle.enableTaskAlias=true
        ##################################
        # Organization tokens:
        ##################################
        # ! In case of PIPER, apiKey may not be used in this configuration, 
        #   but set in configuration of piper. 
        #   Please look at PIPER documentation for more information.
        # ! For CoDePipes you may look at CoDePipes for more information.
        apiKey=${API_KEY}
        
        # userKey is required if WhiteSource administrator has enabled "Enforce user level access" option.
        # ! In case of PIPER, apiKey may not be used in this configuration,
        #   but set in configuration of piper.
        #   Please look at PIPER documentation for more information.
        # ! For CoDePipes you may look at CoDePipes for more information.
        userKey=${USER_KEY}
        
        projectName=${PROJECT_NAME}
        #projectVersion=
        #projectToken=
        
        #productName=
        #productVersion=
        productToken=${PRODUCT_TOKEN}
        #updateType=APPEND
        updateType=OVERRIDE
        
        #requesterEmail=
        
        #########################################################################################
        # Includes/Excludes Glob patterns - PLEASE USE ONLY ONE EXCLUDE LINE AND ONE INCLUDE LINE
        #########################################################################################
        includes=**/*.lock
        
        ## Exclude file extensions or specific directories by adding **/*.<extension> or **<excluded_dir>/**
        excludes=**/*sources.jar **/*javadoc.jar
        
        case.sensitive.glob=false
        followSymbolicLinks=true
        EOF
        
        java -jar /wss-unified-agent.jar -c /wss-unified-agent.config -d kubernikus.builds
  


slack: &slack
  on_success: { put: slack-alert, inputs: [], params: {alert_type: fixed } }
  on_failure: { put: slack-alert, inputs: [], params: {alert_type: broke } }
  on_abort:   { put: slack-alert, inputs: [], params: {alert_type: broke } }
  on_error:   { put: slack-alert, inputs: [], params: {alert_type: broke } }


resources:

  - name: docs.git
    type: git
    source:
      uri: https://github.com/sapcc/kubernikus.git
      paths:
        - docs/**
        - contrib/kubernikus-docs-builder/**
        - swagger.yaml
        - Dockerfile.kubernikus-docs2

  - name: kubernikus.git
    type: git
    source:
      uri: https://github.com/sapcc/kubernikus.git

  - name: docs-builder.image
    type: registry-image
    source:
    check_every: 24h
    source:
      username: ((keppel.username))
      password: ((keppel.password))
      repository: keppel.eu-de-1.cloud.sap/ccloud/kubernikus-docs-builder
      tag: latest

  - name: kubernikus.image
    type: registry-image
    source:
    check_every: 24h
    source:
      username: ((keppel.username))
      password: ((keppel.password))
      repository: keppel.eu-de-1.cloud.sap/ccloud/kubernikus
      tag: latest

  - name: kubernikusctl.release
    type: github-release
    source:
      owner: sapcc
      repository: kubernikus
      access_token: ((github-com-access-token))

  - name: secrets.git
    icon: key-variant
    type: git
    webhook_token: aldhjalkdhahdjkahdjkhjadhjadhkjadlkjhAAdd
    check_every: 1h
    source:
      uri:         git@github.wdf.sap.corp:cc/secrets.git
      private_key: ((secrets-ssh-key))
      branch:      master
      depth: 1

  - name: tiller-version.git
    icon: key-variant
    type: git
    webhook_token: aldhjalkdhahdjkahdjkhjadhjadhkjadlkjhAAdd
    check_every: 1h
    source:
      uri:         git@github.wdf.sap.corp:cc/secrets.git
      private_key: ((secrets-ssh-key))
      branch:      master
      depth: 1
      paths: [ kubernikus/tiller.version, kubernikus/*/tiller.version ]

  - name: helm-charts.git
    type: git
    icon: github-circle
    source:
      uri:    https://github.com/sapcc/helm-charts.git
      branch: master
      paths:  [ openstack/kubernikus/ ]

  - name: slack-alert
    type: slack-alert
    icon: slack
    source:
      url: ((slack-webhook-url))
      channel: '#kubernikus-ci'

  - name: slack-notification
    type: slack-notification
    icon: slack
    source:
      url: ((slack-webhook-url))


  - name: ASIA.tag
    type: time-version-resource
    check_every: 525600h # basically never (only when triggered by a job)
    source:
      group: ASIA
      pipeline: kubernikus # we do this so we don't get versions from other pipelines

  - name: EMEA.tag
    type: time-version-resource
    check_every: 525600h # basically never (only when triggered by a job)
    source:
      group: EMEA
      pipeline: kubernikus # we do this so we don't get versions from other pipelines

  - name: AMERICAS.tag
    type: time-version-resource
    check_every: 525600h # basically never (only when triggered by a job)
    source:
      group: AMERICAS
      pipeline: kubernikus # we do this so we don't get versions from other pipelines

  - name: INFRA.tag
    type: time-version-resource
    check_every: 525600h # basically never (only when triggered by a job)
    source:
      group: INFRA
      pipeline: kubernikus # we do this so we don't get versions from other pipelines


  - name: hourly
    type: time
    source: {interval: 1h}

resource_types:
  - name: slack-alert
    type: docker-image
    check_every: 24h
    source:
      repository: keppel.eu-de-1.cloud.sap/ccloud-dockerhub-mirror/arbourd/concourse-slack-alert-resource
  - name: slack-notification
    type: docker-image
    check_every: 24h
    source:
      repository: keppel.eu-de-1.cloud.sap/ccloud-dockerhub-mirror/cfcommunity/slack-notification-resource
      tag: latest

  - name: time-version-resource
    type: docker-image
    check_every: 24h
    source:
      repository: keppel.eu-de-1.cloud.sap/ccloud/concourse-time-version-resource
      tag: v2

jobs:
  - name: docs
    serial: true
    plan:
      - get: docs.git
        trigger: true
      - task: build
        privileged: true
        config:
          <<: *task_oci_build
        input_mapping: { context: docs.git }
        params:
          DOCKERFILE: context/Dockerfile.kubernikus-docs2
      - put: docs-builder.image
        params:
          image: image/image.tar
  - name: build
    serial: true
    plan:
      - in_parallel:
        - get: kubernikus.git
          trigger: true
        - get: docs-builder.image
          passed: [docs]
      - task: args
        config:
          <<: *task_build_args
      - task: build
        privileged: true
        config:
          <<: *task_oci_build
        input_mapping: { context: kubernikus.git }
        params:
          DOCKERFILE: context/Dockerfile.kubernikus
          BUILD_ARGS_FILE: context/build-args.txt
      - put: kubernikus.image
        params:
          image: image/image.tar
          additional_tags: kubernikus.git/.git/ref

  - name: tiller_master
    plan:
      - in_parallel:
        - get: tiller-version.git
          trigger: true
      - in_parallel:
        - task: master
          config:
            <<: *task_tiller
          timeout: 10m
          params:
            REGION: "k-master"
            <<: *auth_master
    <<: *slack

  - name: master
    serial: true
    plan:
      - in_parallel:
        - get: secrets.git
        - get: kubernikus.builds
          resource: kubernikus.git
          passed: [build]
          trigger: true
      - in_parallel:
        - task: kubernikus
          config:
            <<: *task_helm_kubernikus
          params:
            REGION: eu-nl-1
            CONTEXT: k-master
            <<: *auth_master
        - task: kubernikus-dex
          config:
            <<: *task_helm_kubernikus-dex
          params:
            REGION: eu-nl-1
            CONTEXT: k-master
            <<: *auth_master
    <<: *slack

  - name: cli
    plan:
      - in_parallel:
        - get: kubernikus.builds
          resource: kubernikus.git
          passed: [build]
          trigger: true
      - task: build
        file: kubernikus.builds/ci/task_cli.yaml
      - put: kubernikusctl.release
        params:
          name: binaries/tag
          tag: binaries/tag
          tag_prefix: v
          commitish: binaries/commitish
          globs:
            - binaries/kubernikusctl*
        get_params:
          globs: []
    <<: *slack

  - name: whitesource
    plan:
      - in_parallel:
        - get: kubernikus.builds
          resource: kubernikus.git
          passed: [build]
          trigger: true
      - task: build
        file: kubernikus.builds/ci/task_whitesource.yaml
        params:
          API_KEY: ((whitesource-api-key))
          USER_KEY: ((whitesource-user-key))
          PROJECT_NAME: CCloud Kubernikus
          PRODUCT_TOKEN: ((whitesource-product-token))
    <<: *slack

  - name: e2e
    serial: true
    plan:
      - in_parallel:
        - get: secrets.git
        - get: kubernikus.builds
          resource: kubernikus.git
          passed: [master]
          trigger: true
      - task: e2e_tests
        config:
          <<: *task_e2e_tests
        timeout: 2h
        params:
          <<: *auth_e2e_master
    <<: *slack

  - name: prod
    serial: true
    plan:
      - get: kubernikus.builds
        resource: kubernikus.git
        passed: [e2e]
      - task: changes
        config:
          <<: *task_github_compare_url



  - name: ASIA
    serial: true
    plan:
      - in_parallel:
        - get: helm-charts.git
          trigger: true
        - get: secrets.git
        - get: kubernikus.builds
          resource: kubernikus.git
          passed: [prod]
          trigger: true
        - put: ASIA.tag




  - name: seed_ap-ae-1
    serial: true
    plan:
      - in_parallel:
        - get: ASIA.tag
          passed: [ASIA]
          trigger: true
        - get: secrets.git
          passed: [ASIA]
        - get: helm-charts.git
          passed: [ASIA]
      - task: seed
        config:
          <<: *task_helm_seed
        input_mapping:
          charts.git: helm-charts.git
        params:
          REGION: ap-ae-1
          CONTEXT: ap-ae-1
          <<: *auth_ap-ae-1
    <<: *slack

  - name: tiller_ap-ae-1
    plan:
      - in_parallel:
        - get: ASIA.tag
          trigger: true
          passed: [seed_ap-ae-1]
        - get: tiller-version.git
          trigger: true
      - in_parallel:
        - task: k-ap-ae-1
          config:
            <<: *task_tiller
          timeout: 10m
          params:
            REGION: ap-ae-1
            CONTEXT: k-ap-ae-1
            <<: *auth_ap-ae-1
    <<: *slack

  - name: deploy_ap-ae-1
    serial: true
    plan:
      - in_parallel:
        - get: ASIA.tag
          trigger: true
          passed: [tiller_ap-ae-1]
        - get: secrets.git
          passed: [seed_ap-ae-1]
        - get: kubernikus.builds
          resource: kubernikus.git
          passed: [ASIA]
      - in_parallel:
        - task: kubernikus_ap-ae-1
          config:
            <<: *task_helm_kubernikus
          params:
            REGION: ap-ae-1
            CONTEXT: k-ap-ae-1
            <<: *auth_ap-ae-1
        - task: kubernikus-dex_ap-ae-1
          config:
            <<: *task_helm_kubernikus-dex
          params:
            REGION: ap-ae-1
            CONTEXT: k-ap-ae-1
            <<: *auth_ap-ae-1
    <<: *slack

  - name: soak_ap-ae-1
    serial: true
    build_logs_to_retain: 168
    plan:
      - in_parallel:
        - get: ASIA.tag
          trigger: true
          passed: [deploy_ap-ae-1]
        - get: kubernikus.builds
          resource: kubernikus.git
          passed: [deploy_ap-ae-1]
        - get: hourly
          trigger: true
      - task: e2e_tests
        config:
          <<: *task_e2e_tests
        timeout: 45m
        params:
          <<: *auth_e2e_ap-ae-1
        on_failure:
          put: slack-notification
          params:
            channel: '#kubernikus-ci'
            text: Soak tests in ap-ae-1 failed
            text_file: test-result/content
            attachments:
              - text: $TEXT_FILE_CONTENT
                color: "#d00000"
                footer: $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
                footer_icon: https://ci.concourse-ci.org/public/images/favicon-failed.png

    on_success: { put: slack-alert, inputs: [], params: {alert_type: fixed } }
    on_abort:   { put: slack-alert, inputs: [], params: {alert_type: broke } }
    on_error:   { put: slack-alert, inputs: [], params: {alert_type: broke } }





  - name: seed_ap-au-1
    serial: true
    plan:
      - in_parallel:
        - get: ASIA.tag
          passed: [ASIA]
          trigger: true
        - get: secrets.git
          passed: [ASIA]
        - get: helm-charts.git
          passed: [ASIA]
      - task: seed
        config:
          <<: *task_helm_seed
        input_mapping:
          charts.git: helm-charts.git
        params:
          REGION: ap-au-1
          CONTEXT: ap-au-1
          <<: *auth_ap-au-1
    <<: *slack

  - name: tiller_ap-au-1
    plan:
      - in_parallel:
        - get: ASIA.tag
          trigger: true
          passed: [seed_ap-au-1]
        - get: tiller-version.git
          trigger: true
      - in_parallel:
        - task: k-ap-au-1
          config:
            <<: *task_tiller
          timeout: 10m
          params:
            REGION: ap-au-1
            CONTEXT: k-ap-au-1
            <<: *auth_ap-au-1
    <<: *slack

  - name: deploy_ap-au-1
    serial: true
    plan:
      - in_parallel:
        - get: ASIA.tag
          trigger: true
          passed: [tiller_ap-au-1]
        - get: secrets.git
          passed: [seed_ap-au-1]
        - get: kubernikus.builds
          resource: kubernikus.git
          passed: [ASIA]
      - in_parallel:
        - task: kubernikus_ap-au-1
          config:
            <<: *task_helm_kubernikus
          params:
            REGION: ap-au-1
            CONTEXT: k-ap-au-1
            <<: *auth_ap-au-1
        - task: kubernikus-dex_ap-au-1
          config:
            <<: *task_helm_kubernikus-dex
          params:
            REGION: ap-au-1
            CONTEXT: k-ap-au-1
            <<: *auth_ap-au-1
    <<: *slack

  - name: soak_ap-au-1
    serial: true
    build_logs_to_retain: 168
    plan:
      - in_parallel:
        - get: ASIA.tag
          trigger: true
          passed: [deploy_ap-au-1]
        - get: kubernikus.builds
          resource: kubernikus.git
          passed: [deploy_ap-au-1]
        - get: hourly
          trigger: true
      - task: e2e_tests
        config:
          <<: *task_e2e_tests
        timeout: 45m
        params:
          <<: *auth_e2e_ap-au-1
        on_failure:
          put: slack-notification
          params:
            channel: '#kubernikus-ci'
            text: Soak tests in ap-au-1 failed
            text_file: test-result/content
            attachments:
              - text: $TEXT_FILE_CONTENT
                color: "#d00000"
                footer: $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
                footer_icon: https://ci.concourse-ci.org/public/images/favicon-failed.png

    on_success: { put: slack-alert, inputs: [], params: {alert_type: fixed } }
    on_abort:   { put: slack-alert, inputs: [], params: {alert_type: broke } }
    on_error:   { put: slack-alert, inputs: [], params: {alert_type: broke } }





  - name: seed_ap-cn-1
    serial: true
    plan:
      - in_parallel:
        - get: ASIA.tag
          passed: [ASIA]
          trigger: true
        - get: secrets.git
          passed: [ASIA]
        - get: helm-charts.git
          passed: [ASIA]
      - task: seed
        config:
          <<: *task_helm_seed
        input_mapping:
          charts.git: helm-charts.git
        params:
          REGION: ap-cn-1
          CONTEXT: ap-cn-1
          <<: *auth_ap-cn-1
    <<: *slack

  - name: tiller_ap-cn-1
    plan:
      - in_parallel:
        - get: ASIA.tag
          trigger: true
          passed: [seed_ap-cn-1]
        - get: tiller-version.git
          trigger: true
      - in_parallel:
        - task: k-ap-cn-1
          config:
            <<: *task_tiller
          timeout: 10m
          params:
            REGION: ap-cn-1
            CONTEXT: k-ap-cn-1
            <<: *auth_ap-cn-1
    <<: *slack

  - name: deploy_ap-cn-1
    serial: true
    plan:
      - in_parallel:
        - get: ASIA.tag
          trigger: true
          passed: [tiller_ap-cn-1]
        - get: secrets.git
          passed: [seed_ap-cn-1]
        - get: kubernikus.builds
          resource: kubernikus.git
          passed: [ASIA]
      - in_parallel:
        - task: kubernikus_ap-cn-1
          config:
            <<: *task_helm_kubernikus
          params:
            REGION: ap-cn-1
            CONTEXT: k-ap-cn-1
            <<: *auth_ap-cn-1
        - task: kubernikus-dex_ap-cn-1
          config:
            <<: *task_helm_kubernikus-dex
          params:
            REGION: ap-cn-1
            CONTEXT: k-ap-cn-1
            <<: *auth_ap-cn-1
    <<: *slack

  - name: soak_ap-cn-1
    serial: true
    build_logs_to_retain: 168
    plan:
      - in_parallel:
        - get: ASIA.tag
          trigger: true
          passed: [deploy_ap-cn-1]
        - get: kubernikus.builds
          resource: kubernikus.git
          passed: [deploy_ap-cn-1]
        - get: hourly
          trigger: true
      - task: e2e_tests
        config:
          <<: *task_e2e_tests
        timeout: 45m
        params:
          <<: *auth_e2e_ap-cn-1
        on_failure:
          put: slack-notification
          params:
            channel: '#kubernikus-ci'
            text: Soak tests in ap-cn-1 failed
            text_file: test-result/content
            attachments:
              - text: $TEXT_FILE_CONTENT
                color: "#d00000"
                footer: $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
                footer_icon: https://ci.concourse-ci.org/public/images/favicon-failed.png

    on_success: { put: slack-alert, inputs: [], params: {alert_type: fixed } }
    on_abort:   { put: slack-alert, inputs: [], params: {alert_type: broke } }
    on_error:   { put: slack-alert, inputs: [], params: {alert_type: broke } }





  - name: seed_ap-jp-1
    serial: true
    plan:
      - in_parallel:
        - get: ASIA.tag
          passed: [ASIA]
          trigger: true
        - get: secrets.git
          passed: [ASIA]
        - get: helm-charts.git
          passed: [ASIA]
      - task: seed
        config:
          <<: *task_helm_seed
        input_mapping:
          charts.git: helm-charts.git
        params:
          REGION: ap-jp-1
          CONTEXT: ap-jp-1
          <<: *auth_ap-jp-1
    <<: *slack

  - name: tiller_ap-jp-1
    plan:
      - in_parallel:
        - get: ASIA.tag
          trigger: true
          passed: [seed_ap-jp-1]
        - get: tiller-version.git
          trigger: true
      - in_parallel:
        - task: k-ap-jp-1
          config:
            <<: *task_tiller
          timeout: 10m
          params:
            REGION: ap-jp-1
            CONTEXT: k-ap-jp-1
            <<: *auth_ap-jp-1
    <<: *slack

  - name: deploy_ap-jp-1
    serial: true
    plan:
      - in_parallel:
        - get: ASIA.tag
          trigger: true
          passed: [tiller_ap-jp-1]
        - get: secrets.git
          passed: [seed_ap-jp-1]
        - get: kubernikus.builds
          resource: kubernikus.git
          passed: [ASIA]
      - in_parallel:
        - task: kubernikus_ap-jp-1
          config:
            <<: *task_helm_kubernikus
          params:
            REGION: ap-jp-1
            CONTEXT: k-ap-jp-1
            <<: *auth_ap-jp-1
        - task: kubernikus-dex_ap-jp-1
          config:
            <<: *task_helm_kubernikus-dex
          params:
            REGION: ap-jp-1
            CONTEXT: k-ap-jp-1
            <<: *auth_ap-jp-1
    <<: *slack

  - name: soak_ap-jp-1
    serial: true
    build_logs_to_retain: 168
    plan:
      - in_parallel:
        - get: ASIA.tag
          trigger: true
          passed: [deploy_ap-jp-1]
        - get: kubernikus.builds
          resource: kubernikus.git
          passed: [deploy_ap-jp-1]
        - get: hourly
          trigger: true
      - task: e2e_tests
        config:
          <<: *task_e2e_tests
        timeout: 45m
        params:
          <<: *auth_e2e_ap-jp-1
        on_failure:
          put: slack-notification
          params:
            channel: '#kubernikus-ci'
            text: Soak tests in ap-jp-1 failed
            text_file: test-result/content
            attachments:
              - text: $TEXT_FILE_CONTENT
                color: "#d00000"
                footer: $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
                footer_icon: https://ci.concourse-ci.org/public/images/favicon-failed.png

    on_success: { put: slack-alert, inputs: [], params: {alert_type: fixed } }
    on_abort:   { put: slack-alert, inputs: [], params: {alert_type: broke } }
    on_error:   { put: slack-alert, inputs: [], params: {alert_type: broke } }





  - name: seed_ap-jp-2
    serial: true
    plan:
      - in_parallel:
        - get: ASIA.tag
          passed: [ASIA]
          trigger: true
        - get: secrets.git
          passed: [ASIA]
        - get: helm-charts.git
          passed: [ASIA]
      - task: seed
        config:
          <<: *task_helm_seed
        input_mapping:
          charts.git: helm-charts.git
        params:
          REGION: ap-jp-2
          CONTEXT: ap-jp-2
          <<: *auth_ap-jp-2
    <<: *slack

  - name: tiller_ap-jp-2
    plan:
      - in_parallel:
        - get: ASIA.tag
          trigger: true
          passed: [seed_ap-jp-2]
        - get: tiller-version.git
          trigger: true
      - in_parallel:
        - task: k-ap-jp-2
          config:
            <<: *task_tiller
          timeout: 10m
          params:
            REGION: ap-jp-2
            CONTEXT: k-ap-jp-2
            <<: *auth_ap-jp-2
    <<: *slack

  - name: deploy_ap-jp-2
    serial: true
    plan:
      - in_parallel:
        - get: ASIA.tag
          trigger: true
          passed: [tiller_ap-jp-2]
        - get: secrets.git
          passed: [seed_ap-jp-2]
        - get: kubernikus.builds
          resource: kubernikus.git
          passed: [ASIA]
      - in_parallel:
        - task: kubernikus_ap-jp-2
          config:
            <<: *task_helm_kubernikus
          params:
            REGION: ap-jp-2
            CONTEXT: k-ap-jp-2
            <<: *auth_ap-jp-2
        - task: kubernikus-dex_ap-jp-2
          config:
            <<: *task_helm_kubernikus-dex
          params:
            REGION: ap-jp-2
            CONTEXT: k-ap-jp-2
            <<: *auth_ap-jp-2
    <<: *slack

  - name: soak_ap-jp-2
    serial: true
    build_logs_to_retain: 168
    plan:
      - in_parallel:
        - get: ASIA.tag
          trigger: true
          passed: [deploy_ap-jp-2]
        - get: kubernikus.builds
          resource: kubernikus.git
          passed: [deploy_ap-jp-2]
        - get: hourly
          trigger: true
      - task: e2e_tests
        config:
          <<: *task_e2e_tests
        timeout: 45m
        params:
          <<: *auth_e2e_ap-jp-2
        on_failure:
          put: slack-notification
          params:
            channel: '#kubernikus-ci'
            text: Soak tests in ap-jp-2 failed
            text_file: test-result/content
            attachments:
              - text: $TEXT_FILE_CONTENT
                color: "#d00000"
                footer: $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
                footer_icon: https://ci.concourse-ci.org/public/images/favicon-failed.png

    on_success: { put: slack-alert, inputs: [], params: {alert_type: fixed } }
    on_abort:   { put: slack-alert, inputs: [], params: {alert_type: broke } }
    on_error:   { put: slack-alert, inputs: [], params: {alert_type: broke } }





  - name: seed_ap-sa-1
    serial: true
    plan:
      - in_parallel:
        - get: ASIA.tag
          passed: [ASIA]
          trigger: true
        - get: secrets.git
          passed: [ASIA]
        - get: helm-charts.git
          passed: [ASIA]
      - task: seed
        config:
          <<: *task_helm_seed
        input_mapping:
          charts.git: helm-charts.git
        params:
          REGION: ap-sa-1
          CONTEXT: ap-sa-1
          <<: *auth_ap-sa-1
    <<: *slack

  - name: tiller_ap-sa-1
    plan:
      - in_parallel:
        - get: ASIA.tag
          trigger: true
          passed: [seed_ap-sa-1]
        - get: tiller-version.git
          trigger: true
      - in_parallel:
        - task: k-ap-sa-1
          config:
            <<: *task_tiller
          timeout: 10m
          params:
            REGION: ap-sa-1
            CONTEXT: k-ap-sa-1
            <<: *auth_ap-sa-1
    <<: *slack

  - name: deploy_ap-sa-1
    serial: true
    plan:
      - in_parallel:
        - get: ASIA.tag
          trigger: true
          passed: [tiller_ap-sa-1]
        - get: secrets.git
          passed: [seed_ap-sa-1]
        - get: kubernikus.builds
          resource: kubernikus.git
          passed: [ASIA]
      - in_parallel:
        - task: kubernikus_ap-sa-1
          config:
            <<: *task_helm_kubernikus
          params:
            REGION: ap-sa-1
            CONTEXT: k-ap-sa-1
            <<: *auth_ap-sa-1
        - task: kubernikus-dex_ap-sa-1
          config:
            <<: *task_helm_kubernikus-dex
          params:
            REGION: ap-sa-1
            CONTEXT: k-ap-sa-1
            <<: *auth_ap-sa-1
    <<: *slack

  - name: soak_ap-sa-1
    serial: true
    build_logs_to_retain: 168
    plan:
      - in_parallel:
        - get: ASIA.tag
          trigger: true
          passed: [deploy_ap-sa-1]
        - get: kubernikus.builds
          resource: kubernikus.git
          passed: [deploy_ap-sa-1]
        - get: hourly
          trigger: true
      - task: e2e_tests
        config:
          <<: *task_e2e_tests
        timeout: 45m
        params:
          <<: *auth_e2e_ap-sa-1
        on_failure:
          put: slack-notification
          params:
            channel: '#kubernikus-ci'
            text: Soak tests in ap-sa-1 failed
            text_file: test-result/content
            attachments:
              - text: $TEXT_FILE_CONTENT
                color: "#d00000"
                footer: $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
                footer_icon: https://ci.concourse-ci.org/public/images/favicon-failed.png

    on_success: { put: slack-alert, inputs: [], params: {alert_type: fixed } }
    on_abort:   { put: slack-alert, inputs: [], params: {alert_type: broke } }
    on_error:   { put: slack-alert, inputs: [], params: {alert_type: broke } }





  - name: seed_ap-sa-2
    serial: true
    plan:
      - in_parallel:
        - get: ASIA.tag
          passed: [ASIA]
          trigger: true
        - get: secrets.git
          passed: [ASIA]
        - get: helm-charts.git
          passed: [ASIA]
      - task: seed
        config:
          <<: *task_helm_seed
        input_mapping:
          charts.git: helm-charts.git
        params:
          REGION: ap-sa-2
          CONTEXT: ap-sa-2
          <<: *auth_ap-sa-2
    <<: *slack

  - name: tiller_ap-sa-2
    plan:
      - in_parallel:
        - get: ASIA.tag
          trigger: true
          passed: [seed_ap-sa-2]
        - get: tiller-version.git
          trigger: true
      - in_parallel:
        - task: k-ap-sa-2
          config:
            <<: *task_tiller
          timeout: 10m
          params:
            REGION: ap-sa-2
            CONTEXT: k-ap-sa-2
            <<: *auth_ap-sa-2
    <<: *slack

  - name: deploy_ap-sa-2
    serial: true
    plan:
      - in_parallel:
        - get: ASIA.tag
          trigger: true
          passed: [tiller_ap-sa-2]
        - get: secrets.git
          passed: [seed_ap-sa-2]
        - get: kubernikus.builds
          resource: kubernikus.git
          passed: [ASIA]
      - in_parallel:
        - task: kubernikus_ap-sa-2
          config:
            <<: *task_helm_kubernikus
          params:
            REGION: ap-sa-2
            CONTEXT: k-ap-sa-2
            <<: *auth_ap-sa-2
        - task: kubernikus-dex_ap-sa-2
          config:
            <<: *task_helm_kubernikus-dex
          params:
            REGION: ap-sa-2
            CONTEXT: k-ap-sa-2
            <<: *auth_ap-sa-2
    <<: *slack

  - name: soak_ap-sa-2
    serial: true
    build_logs_to_retain: 168
    plan:
      - in_parallel:
        - get: ASIA.tag
          trigger: true
          passed: [deploy_ap-sa-2]
        - get: kubernikus.builds
          resource: kubernikus.git
          passed: [deploy_ap-sa-2]
        - get: hourly
          trigger: true
      - task: e2e_tests
        config:
          <<: *task_e2e_tests
        timeout: 45m
        params:
          <<: *auth_e2e_ap-sa-2
        on_failure:
          put: slack-notification
          params:
            channel: '#kubernikus-ci'
            text: Soak tests in ap-sa-2 failed
            text_file: test-result/content
            attachments:
              - text: $TEXT_FILE_CONTENT
                color: "#d00000"
                footer: $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
                footer_icon: https://ci.concourse-ci.org/public/images/favicon-failed.png

    on_success: { put: slack-alert, inputs: [], params: {alert_type: fixed } }
    on_abort:   { put: slack-alert, inputs: [], params: {alert_type: broke } }
    on_error:   { put: slack-alert, inputs: [], params: {alert_type: broke } }




  - name: EMEA
    serial: true
    plan:
      - in_parallel:
        - get: helm-charts.git
          trigger: true
        - get: secrets.git
        - get: kubernikus.builds
          resource: kubernikus.git
          passed: [prod]
          trigger: true
        - put: EMEA.tag




  - name: seed_eu-de-1
    serial: true
    plan:
      - in_parallel:
        - get: EMEA.tag
          passed: [EMEA]
          trigger: true
        - get: secrets.git
          passed: [EMEA]
        - get: helm-charts.git
          passed: [EMEA]
      - task: seed
        config:
          <<: *task_helm_seed
        input_mapping:
          charts.git: helm-charts.git
        params:
          REGION: eu-de-1
          CONTEXT: eu-de-1
          <<: *auth_eu-de-1
    <<: *slack

  - name: tiller_eu-de-1
    plan:
      - in_parallel:
        - get: EMEA.tag
          trigger: true
          passed: [seed_eu-de-1]
        - get: tiller-version.git
          trigger: true
      - in_parallel:
        - task: k-eu-de-1
          config:
            <<: *task_tiller
          timeout: 10m
          params:
            REGION: eu-de-1
            CONTEXT: k-eu-de-1
            <<: *auth_eu-de-1
    <<: *slack

  - name: deploy_eu-de-1
    serial: true
    plan:
      - in_parallel:
        - get: EMEA.tag
          trigger: true
          passed: [tiller_eu-de-1]
        - get: secrets.git
          passed: [seed_eu-de-1]
        - get: kubernikus.builds
          resource: kubernikus.git
          passed: [EMEA]
      - in_parallel:
        - task: kubernikus_eu-de-1
          config:
            <<: *task_helm_kubernikus
          params:
            REGION: eu-de-1
            CONTEXT: k-eu-de-1
            <<: *auth_eu-de-1
        - task: kubernikus-dex_eu-de-1
          config:
            <<: *task_helm_kubernikus-dex
          params:
            REGION: eu-de-1
            CONTEXT: k-eu-de-1
            <<: *auth_eu-de-1
    <<: *slack

  - name: soak_eu-de-1
    serial: true
    build_logs_to_retain: 168
    plan:
      - in_parallel:
        - get: EMEA.tag
          trigger: true
          passed: [deploy_eu-de-1]
        - get: kubernikus.builds
          resource: kubernikus.git
          passed: [deploy_eu-de-1]
        - get: hourly
          trigger: true
      - task: e2e_tests
        config:
          <<: *task_e2e_tests
        timeout: 45m
        params:
          <<: *auth_e2e_eu-de-1
        on_failure:
          put: slack-notification
          params:
            channel: '#kubernikus-ci'
            text: Soak tests in eu-de-1 failed
            text_file: test-result/content
            attachments:
              - text: $TEXT_FILE_CONTENT
                color: "#d00000"
                footer: $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
                footer_icon: https://ci.concourse-ci.org/public/images/favicon-failed.png

    on_success: { put: slack-alert, inputs: [], params: {alert_type: fixed } }
    on_abort:   { put: slack-alert, inputs: [], params: {alert_type: broke } }
    on_error:   { put: slack-alert, inputs: [], params: {alert_type: broke } }





  - name: seed_eu-de-2
    serial: true
    plan:
      - in_parallel:
        - get: EMEA.tag
          passed: [EMEA]
          trigger: true
        - get: secrets.git
          passed: [EMEA]
        - get: helm-charts.git
          passed: [EMEA]
      - task: seed
        config:
          <<: *task_helm_seed
        input_mapping:
          charts.git: helm-charts.git
        params:
          REGION: eu-de-2
          CONTEXT: eu-de-2
          <<: *auth_eu-de-2
    <<: *slack

  - name: tiller_eu-de-2
    plan:
      - in_parallel:
        - get: EMEA.tag
          trigger: true
          passed: [seed_eu-de-2]
        - get: tiller-version.git
          trigger: true
      - in_parallel:
        - task: k-eu-de-2
          config:
            <<: *task_tiller
          timeout: 10m
          params:
            REGION: eu-de-2
            CONTEXT: k-eu-de-2
            <<: *auth_eu-de-2
    <<: *slack

  - name: deploy_eu-de-2
    serial: true
    plan:
      - in_parallel:
        - get: EMEA.tag
          trigger: true
          passed: [tiller_eu-de-2]
        - get: secrets.git
          passed: [seed_eu-de-2]
        - get: kubernikus.builds
          resource: kubernikus.git
          passed: [EMEA]
      - in_parallel:
        - task: kubernikus_eu-de-2
          config:
            <<: *task_helm_kubernikus
          params:
            REGION: eu-de-2
            CONTEXT: k-eu-de-2
            <<: *auth_eu-de-2
        - task: kubernikus-dex_eu-de-2
          config:
            <<: *task_helm_kubernikus-dex
          params:
            REGION: eu-de-2
            CONTEXT: k-eu-de-2
            <<: *auth_eu-de-2
    <<: *slack

  - name: soak_eu-de-2
    serial: true
    build_logs_to_retain: 168
    plan:
      - in_parallel:
        - get: EMEA.tag
          trigger: true
          passed: [deploy_eu-de-2]
        - get: kubernikus.builds
          resource: kubernikus.git
          passed: [deploy_eu-de-2]
        - get: hourly
          trigger: true
      - task: e2e_tests
        config:
          <<: *task_e2e_tests
        timeout: 45m
        params:
          <<: *auth_e2e_eu-de-2
        on_failure:
          put: slack-notification
          params:
            channel: '#kubernikus-ci'
            text: Soak tests in eu-de-2 failed
            text_file: test-result/content
            attachments:
              - text: $TEXT_FILE_CONTENT
                color: "#d00000"
                footer: $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
                footer_icon: https://ci.concourse-ci.org/public/images/favicon-failed.png

    on_success: { put: slack-alert, inputs: [], params: {alert_type: fixed } }
    on_abort:   { put: slack-alert, inputs: [], params: {alert_type: broke } }
    on_error:   { put: slack-alert, inputs: [], params: {alert_type: broke } }





  - name: seed_eu-nl-1
    serial: true
    plan:
      - in_parallel:
        - get: EMEA.tag
          passed: [EMEA]
          trigger: true
        - get: secrets.git
          passed: [EMEA]
        - get: helm-charts.git
          passed: [EMEA]
      - task: seed
        config:
          <<: *task_helm_seed
        input_mapping:
          charts.git: helm-charts.git
        params:
          REGION: eu-nl-1
          CONTEXT: eu-nl-1
          <<: *auth_eu-nl-1
    <<: *slack

  - name: tiller_eu-nl-1
    plan:
      - in_parallel:
        - get: EMEA.tag
          trigger: true
          passed: [seed_eu-nl-1]
        - get: tiller-version.git
          trigger: true
      - in_parallel:
        - task: k-eu-nl-1
          config:
            <<: *task_tiller
          timeout: 10m
          params:
            REGION: eu-nl-1
            CONTEXT: k-eu-nl-1
            <<: *auth_eu-nl-1
    <<: *slack

  - name: deploy_eu-nl-1
    serial: true
    plan:
      - in_parallel:
        - get: EMEA.tag
          trigger: true
          passed: [tiller_eu-nl-1]
        - get: secrets.git
          passed: [seed_eu-nl-1]
        - get: kubernikus.builds
          resource: kubernikus.git
          passed: [EMEA]
      - in_parallel:
        - task: kubernikus_eu-nl-1
          config:
            <<: *task_helm_kubernikus
          params:
            REGION: eu-nl-1
            CONTEXT: k-eu-nl-1
            <<: *auth_eu-nl-1
        - task: kubernikus-dex_eu-nl-1
          config:
            <<: *task_helm_kubernikus-dex
          params:
            REGION: eu-nl-1
            CONTEXT: k-eu-nl-1
            <<: *auth_eu-nl-1
    <<: *slack

  - name: soak_eu-nl-1
    serial: true
    build_logs_to_retain: 168
    plan:
      - in_parallel:
        - get: EMEA.tag
          trigger: true
          passed: [deploy_eu-nl-1]
        - get: kubernikus.builds
          resource: kubernikus.git
          passed: [deploy_eu-nl-1]
        - get: hourly
          trigger: true
      - task: e2e_tests
        config:
          <<: *task_e2e_tests
        timeout: 45m
        params:
          <<: *auth_e2e_eu-nl-1
        on_failure:
          put: slack-notification
          params:
            channel: '#kubernikus-ci'
            text: Soak tests in eu-nl-1 failed
            text_file: test-result/content
            attachments:
              - text: $TEXT_FILE_CONTENT
                color: "#d00000"
                footer: $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
                footer_icon: https://ci.concourse-ci.org/public/images/favicon-failed.png

    on_success: { put: slack-alert, inputs: [], params: {alert_type: fixed } }
    on_abort:   { put: slack-alert, inputs: [], params: {alert_type: broke } }
    on_error:   { put: slack-alert, inputs: [], params: {alert_type: broke } }





  - name: seed_eu-ru-1
    serial: true
    plan:
      - in_parallel:
        - get: EMEA.tag
          passed: [EMEA]
          trigger: true
        - get: secrets.git
          passed: [EMEA]
        - get: helm-charts.git
          passed: [EMEA]
      - task: seed
        config:
          <<: *task_helm_seed
        input_mapping:
          charts.git: helm-charts.git
        params:
          REGION: eu-ru-1
          CONTEXT: eu-ru-1
          <<: *auth_eu-ru-1
    <<: *slack

  - name: tiller_eu-ru-1
    plan:
      - in_parallel:
        - get: EMEA.tag
          trigger: true
          passed: [seed_eu-ru-1]
        - get: tiller-version.git
          trigger: true
      - in_parallel:
        - task: k-eu-ru-1
          config:
            <<: *task_tiller
          timeout: 10m
          params:
            REGION: eu-ru-1
            CONTEXT: k-eu-ru-1
            <<: *auth_eu-ru-1
    <<: *slack

  - name: deploy_eu-ru-1
    serial: true
    plan:
      - in_parallel:
        - get: EMEA.tag
          trigger: true
          passed: [tiller_eu-ru-1]
        - get: secrets.git
          passed: [seed_eu-ru-1]
        - get: kubernikus.builds
          resource: kubernikus.git
          passed: [EMEA]
      - in_parallel:
        - task: kubernikus_eu-ru-1
          config:
            <<: *task_helm_kubernikus
          params:
            REGION: eu-ru-1
            CONTEXT: k-eu-ru-1
            <<: *auth_eu-ru-1
        - task: kubernikus-dex_eu-ru-1
          config:
            <<: *task_helm_kubernikus-dex
          params:
            REGION: eu-ru-1
            CONTEXT: k-eu-ru-1
            <<: *auth_eu-ru-1
    <<: *slack

  - name: soak_eu-ru-1
    serial: true
    build_logs_to_retain: 168
    plan:
      - in_parallel:
        - get: EMEA.tag
          trigger: true
          passed: [deploy_eu-ru-1]
        - get: kubernikus.builds
          resource: kubernikus.git
          passed: [deploy_eu-ru-1]
        - get: hourly
          trigger: true
      - task: e2e_tests
        config:
          <<: *task_e2e_tests
        timeout: 45m
        params:
          <<: *auth_e2e_eu-ru-1
        on_failure:
          put: slack-notification
          params:
            channel: '#kubernikus-ci'
            text: Soak tests in eu-ru-1 failed
            text_file: test-result/content
            attachments:
              - text: $TEXT_FILE_CONTENT
                color: "#d00000"
                footer: $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
                footer_icon: https://ci.concourse-ci.org/public/images/favicon-failed.png

    on_success: { put: slack-alert, inputs: [], params: {alert_type: fixed } }
    on_abort:   { put: slack-alert, inputs: [], params: {alert_type: broke } }
    on_error:   { put: slack-alert, inputs: [], params: {alert_type: broke } }




  - name: AMERICAS
    serial: true
    plan:
      - in_parallel:
        - get: helm-charts.git
          trigger: true
        - get: secrets.git
        - get: kubernikus.builds
          resource: kubernikus.git
          passed: [prod]
          trigger: true
        - put: AMERICAS.tag




  - name: seed_la-br-1
    serial: true
    plan:
      - in_parallel:
        - get: AMERICAS.tag
          passed: [AMERICAS]
          trigger: true
        - get: secrets.git
          passed: [AMERICAS]
        - get: helm-charts.git
          passed: [AMERICAS]
      - task: seed
        config:
          <<: *task_helm_seed
        input_mapping:
          charts.git: helm-charts.git
        params:
          REGION: la-br-1
          CONTEXT: la-br-1
          <<: *auth_la-br-1
    <<: *slack

  - name: tiller_la-br-1
    plan:
      - in_parallel:
        - get: AMERICAS.tag
          trigger: true
          passed: [seed_la-br-1]
        - get: tiller-version.git
          trigger: true
      - in_parallel:
        - task: k-la-br-1
          config:
            <<: *task_tiller
          timeout: 10m
          params:
            REGION: la-br-1
            CONTEXT: k-la-br-1
            <<: *auth_la-br-1
    <<: *slack

  - name: deploy_la-br-1
    serial: true
    plan:
      - in_parallel:
        - get: AMERICAS.tag
          trigger: true
          passed: [tiller_la-br-1]
        - get: secrets.git
          passed: [seed_la-br-1]
        - get: kubernikus.builds
          resource: kubernikus.git
          passed: [AMERICAS]
      - in_parallel:
        - task: kubernikus_la-br-1
          config:
            <<: *task_helm_kubernikus
          params:
            REGION: la-br-1
            CONTEXT: k-la-br-1
            <<: *auth_la-br-1
        - task: kubernikus-dex_la-br-1
          config:
            <<: *task_helm_kubernikus-dex
          params:
            REGION: la-br-1
            CONTEXT: k-la-br-1
            <<: *auth_la-br-1
    <<: *slack

  - name: soak_la-br-1
    serial: true
    build_logs_to_retain: 168
    plan:
      - in_parallel:
        - get: AMERICAS.tag
          trigger: true
          passed: [deploy_la-br-1]
        - get: kubernikus.builds
          resource: kubernikus.git
          passed: [deploy_la-br-1]
        - get: hourly
          trigger: true
      - task: e2e_tests
        config:
          <<: *task_e2e_tests
        timeout: 45m
        params:
          <<: *auth_e2e_la-br-1
        on_failure:
          put: slack-notification
          params:
            channel: '#kubernikus-ci'
            text: Soak tests in la-br-1 failed
            text_file: test-result/content
            attachments:
              - text: $TEXT_FILE_CONTENT
                color: "#d00000"
                footer: $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
                footer_icon: https://ci.concourse-ci.org/public/images/favicon-failed.png

    on_success: { put: slack-alert, inputs: [], params: {alert_type: fixed } }
    on_abort:   { put: slack-alert, inputs: [], params: {alert_type: broke } }
    on_error:   { put: slack-alert, inputs: [], params: {alert_type: broke } }





  - name: seed_na-ca-1
    serial: true
    plan:
      - in_parallel:
        - get: AMERICAS.tag
          passed: [AMERICAS]
          trigger: true
        - get: secrets.git
          passed: [AMERICAS]
        - get: helm-charts.git
          passed: [AMERICAS]
      - task: seed
        config:
          <<: *task_helm_seed
        input_mapping:
          charts.git: helm-charts.git
        params:
          REGION: na-ca-1
          CONTEXT: na-ca-1
          <<: *auth_na-ca-1
    <<: *slack

  - name: tiller_na-ca-1
    plan:
      - in_parallel:
        - get: AMERICAS.tag
          trigger: true
          passed: [seed_na-ca-1]
        - get: tiller-version.git
          trigger: true
      - in_parallel:
        - task: k-na-ca-1
          config:
            <<: *task_tiller
          timeout: 10m
          params:
            REGION: na-ca-1
            CONTEXT: k-na-ca-1
            <<: *auth_na-ca-1
    <<: *slack

  - name: deploy_na-ca-1
    serial: true
    plan:
      - in_parallel:
        - get: AMERICAS.tag
          trigger: true
          passed: [tiller_na-ca-1]
        - get: secrets.git
          passed: [seed_na-ca-1]
        - get: kubernikus.builds
          resource: kubernikus.git
          passed: [AMERICAS]
      - in_parallel:
        - task: kubernikus_na-ca-1
          config:
            <<: *task_helm_kubernikus
          params:
            REGION: na-ca-1
            CONTEXT: k-na-ca-1
            <<: *auth_na-ca-1
        - task: kubernikus-dex_na-ca-1
          config:
            <<: *task_helm_kubernikus-dex
          params:
            REGION: na-ca-1
            CONTEXT: k-na-ca-1
            <<: *auth_na-ca-1
    <<: *slack

  - name: soak_na-ca-1
    serial: true
    build_logs_to_retain: 168
    plan:
      - in_parallel:
        - get: AMERICAS.tag
          trigger: true
          passed: [deploy_na-ca-1]
        - get: kubernikus.builds
          resource: kubernikus.git
          passed: [deploy_na-ca-1]
        - get: hourly
          trigger: true
      - task: e2e_tests
        config:
          <<: *task_e2e_tests
        timeout: 45m
        params:
          <<: *auth_e2e_na-ca-1
        on_failure:
          put: slack-notification
          params:
            channel: '#kubernikus-ci'
            text: Soak tests in na-ca-1 failed
            text_file: test-result/content
            attachments:
              - text: $TEXT_FILE_CONTENT
                color: "#d00000"
                footer: $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
                footer_icon: https://ci.concourse-ci.org/public/images/favicon-failed.png

    on_success: { put: slack-alert, inputs: [], params: {alert_type: fixed } }
    on_abort:   { put: slack-alert, inputs: [], params: {alert_type: broke } }
    on_error:   { put: slack-alert, inputs: [], params: {alert_type: broke } }





  - name: seed_na-us-1
    serial: true
    plan:
      - in_parallel:
        - get: AMERICAS.tag
          passed: [AMERICAS]
          trigger: true
        - get: secrets.git
          passed: [AMERICAS]
        - get: helm-charts.git
          passed: [AMERICAS]
      - task: seed
        config:
          <<: *task_helm_seed
        input_mapping:
          charts.git: helm-charts.git
        params:
          REGION: na-us-1
          CONTEXT: na-us-1
          <<: *auth_na-us-1
    <<: *slack

  - name: tiller_na-us-1
    plan:
      - in_parallel:
        - get: AMERICAS.tag
          trigger: true
          passed: [seed_na-us-1]
        - get: tiller-version.git
          trigger: true
      - in_parallel:
        - task: k-na-us-1
          config:
            <<: *task_tiller
          timeout: 10m
          params:
            REGION: na-us-1
            CONTEXT: k-na-us-1
            <<: *auth_na-us-1
    <<: *slack

  - name: deploy_na-us-1
    serial: true
    plan:
      - in_parallel:
        - get: AMERICAS.tag
          trigger: true
          passed: [tiller_na-us-1]
        - get: secrets.git
          passed: [seed_na-us-1]
        - get: kubernikus.builds
          resource: kubernikus.git
          passed: [AMERICAS]
      - in_parallel:
        - task: kubernikus_na-us-1
          config:
            <<: *task_helm_kubernikus
          params:
            REGION: na-us-1
            CONTEXT: k-na-us-1
            <<: *auth_na-us-1
        - task: kubernikus-dex_na-us-1
          config:
            <<: *task_helm_kubernikus-dex
          params:
            REGION: na-us-1
            CONTEXT: k-na-us-1
            <<: *auth_na-us-1
    <<: *slack

  - name: soak_na-us-1
    serial: true
    build_logs_to_retain: 168
    plan:
      - in_parallel:
        - get: AMERICAS.tag
          trigger: true
          passed: [deploy_na-us-1]
        - get: kubernikus.builds
          resource: kubernikus.git
          passed: [deploy_na-us-1]
        - get: hourly
          trigger: true
      - task: e2e_tests
        config:
          <<: *task_e2e_tests
        timeout: 45m
        params:
          <<: *auth_e2e_na-us-1
        on_failure:
          put: slack-notification
          params:
            channel: '#kubernikus-ci'
            text: Soak tests in na-us-1 failed
            text_file: test-result/content
            attachments:
              - text: $TEXT_FILE_CONTENT
                color: "#d00000"
                footer: $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
                footer_icon: https://ci.concourse-ci.org/public/images/favicon-failed.png

    on_success: { put: slack-alert, inputs: [], params: {alert_type: fixed } }
    on_abort:   { put: slack-alert, inputs: [], params: {alert_type: broke } }
    on_error:   { put: slack-alert, inputs: [], params: {alert_type: broke } }





  - name: seed_na-us-2
    serial: true
    plan:
      - in_parallel:
        - get: AMERICAS.tag
          passed: [AMERICAS]
          trigger: true
        - get: secrets.git
          passed: [AMERICAS]
        - get: helm-charts.git
          passed: [AMERICAS]
      - task: seed
        config:
          <<: *task_helm_seed
        input_mapping:
          charts.git: helm-charts.git
        params:
          REGION: na-us-2
          CONTEXT: na-us-2
          <<: *auth_na-us-2
    <<: *slack

  - name: tiller_na-us-2
    plan:
      - in_parallel:
        - get: AMERICAS.tag
          trigger: true
          passed: [seed_na-us-2]
        - get: tiller-version.git
          trigger: true
      - in_parallel:
        - task: k-na-us-2
          config:
            <<: *task_tiller
          timeout: 10m
          params:
            REGION: na-us-2
            CONTEXT: k-na-us-2
            <<: *auth_na-us-2
    <<: *slack

  - name: deploy_na-us-2
    serial: true
    plan:
      - in_parallel:
        - get: AMERICAS.tag
          trigger: true
          passed: [tiller_na-us-2]
        - get: secrets.git
          passed: [seed_na-us-2]
        - get: kubernikus.builds
          resource: kubernikus.git
          passed: [AMERICAS]
      - in_parallel:
        - task: kubernikus_na-us-2
          config:
            <<: *task_helm_kubernikus
          params:
            REGION: na-us-2
            CONTEXT: k-na-us-2
            <<: *auth_na-us-2
        - task: kubernikus-dex_na-us-2
          config:
            <<: *task_helm_kubernikus-dex
          params:
            REGION: na-us-2
            CONTEXT: k-na-us-2
            <<: *auth_na-us-2
    <<: *slack

  - name: soak_na-us-2
    serial: true
    build_logs_to_retain: 168
    plan:
      - in_parallel:
        - get: AMERICAS.tag
          trigger: true
          passed: [deploy_na-us-2]
        - get: kubernikus.builds
          resource: kubernikus.git
          passed: [deploy_na-us-2]
        - get: hourly
          trigger: true
      - task: e2e_tests
        config:
          <<: *task_e2e_tests
        timeout: 45m
        params:
          <<: *auth_e2e_na-us-2
        on_failure:
          put: slack-notification
          params:
            channel: '#kubernikus-ci'
            text: Soak tests in na-us-2 failed
            text_file: test-result/content
            attachments:
              - text: $TEXT_FILE_CONTENT
                color: "#d00000"
                footer: $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
                footer_icon: https://ci.concourse-ci.org/public/images/favicon-failed.png

    on_success: { put: slack-alert, inputs: [], params: {alert_type: fixed } }
    on_abort:   { put: slack-alert, inputs: [], params: {alert_type: broke } }
    on_error:   { put: slack-alert, inputs: [], params: {alert_type: broke } }





  - name: seed_na-us-3
    serial: true
    plan:
      - in_parallel:
        - get: AMERICAS.tag
          passed: [AMERICAS]
          trigger: true
        - get: secrets.git
          passed: [AMERICAS]
        - get: helm-charts.git
          passed: [AMERICAS]
      - task: seed
        config:
          <<: *task_helm_seed
        input_mapping:
          charts.git: helm-charts.git
        params:
          REGION: na-us-3
          CONTEXT: na-us-3
          <<: *auth_na-us-3
    <<: *slack

  - name: tiller_na-us-3
    plan:
      - in_parallel:
        - get: AMERICAS.tag
          trigger: true
          passed: [seed_na-us-3]
        - get: tiller-version.git
          trigger: true
      - in_parallel:
        - task: k-na-us-3
          config:
            <<: *task_tiller
          timeout: 10m
          params:
            REGION: na-us-3
            CONTEXT: k-na-us-3
            <<: *auth_na-us-3
    <<: *slack

  - name: deploy_na-us-3
    serial: true
    plan:
      - in_parallel:
        - get: AMERICAS.tag
          trigger: true
          passed: [tiller_na-us-3]
        - get: secrets.git
          passed: [seed_na-us-3]
        - get: kubernikus.builds
          resource: kubernikus.git
          passed: [AMERICAS]
      - in_parallel:
        - task: kubernikus_na-us-3
          config:
            <<: *task_helm_kubernikus
          params:
            REGION: na-us-3
            CONTEXT: k-na-us-3
            <<: *auth_na-us-3
        - task: kubernikus-dex_na-us-3
          config:
            <<: *task_helm_kubernikus-dex
          params:
            REGION: na-us-3
            CONTEXT: k-na-us-3
            <<: *auth_na-us-3
    <<: *slack

  - name: soak_na-us-3
    serial: true
    build_logs_to_retain: 168
    plan:
      - in_parallel:
        - get: AMERICAS.tag
          trigger: true
          passed: [deploy_na-us-3]
        - get: kubernikus.builds
          resource: kubernikus.git
          passed: [deploy_na-us-3]
        - get: hourly
          trigger: true
      - task: e2e_tests
        config:
          <<: *task_e2e_tests
        timeout: 45m
        params:
          <<: *auth_e2e_na-us-3
        on_failure:
          put: slack-notification
          params:
            channel: '#kubernikus-ci'
            text: Soak tests in na-us-3 failed
            text_file: test-result/content
            attachments:
              - text: $TEXT_FILE_CONTENT
                color: "#d00000"
                footer: $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
                footer_icon: https://ci.concourse-ci.org/public/images/favicon-failed.png

    on_success: { put: slack-alert, inputs: [], params: {alert_type: fixed } }
    on_abort:   { put: slack-alert, inputs: [], params: {alert_type: broke } }
    on_error:   { put: slack-alert, inputs: [], params: {alert_type: broke } }




  - name: INFRA
    serial: true
    plan:
      - in_parallel:
        - get: helm-charts.git
          trigger: true
        - get: secrets.git
        - get: kubernikus.builds
          resource: kubernikus.git
          passed: [prod]
          trigger: true
        - put: INFRA.tag




  - name: seed_qa-de-1
    serial: true
    plan:
      - in_parallel:
        - get: INFRA.tag
          passed: [INFRA]
          trigger: true
        - get: secrets.git
          passed: [INFRA]
        - get: helm-charts.git
          passed: [INFRA]
      - task: seed
        config:
          <<: *task_helm_seed
        input_mapping:
          charts.git: helm-charts.git
        params:
          REGION: qa-de-1
          CONTEXT: qa-de-1
          <<: *auth_qa-de-1
    <<: *slack

  - name: tiller_qa-de-1
    plan:
      - in_parallel:
        - get: INFRA.tag
          trigger: true
          passed: [seed_qa-de-1]
        - get: tiller-version.git
          trigger: true
      - in_parallel:
        - task: k-qa-de-1
          config:
            <<: *task_tiller
          timeout: 10m
          params:
            REGION: qa-de-1
            CONTEXT: k-qa-de-1
            <<: *auth_qa-de-1
    <<: *slack

  - name: deploy_qa-de-1
    serial: true
    plan:
      - in_parallel:
        - get: INFRA.tag
          trigger: true
          passed: [tiller_qa-de-1]
        - get: secrets.git
          passed: [seed_qa-de-1]
        - get: kubernikus.builds
          resource: kubernikus.git
          passed: [INFRA]
      - in_parallel:
        - task: kubernikus_qa-de-1
          config:
            <<: *task_helm_kubernikus
          params:
            REGION: qa-de-1
            CONTEXT: k-qa-de-1
            <<: *auth_qa-de-1
        - task: kubernikus-dex_qa-de-1
          config:
            <<: *task_helm_kubernikus-dex
          params:
            REGION: qa-de-1
            CONTEXT: k-qa-de-1
            <<: *auth_qa-de-1
    <<: *slack

  - name: soak_qa-de-1
    serial: true
    build_logs_to_retain: 168
    plan:
      - in_parallel:
        - get: INFRA.tag
          trigger: true
          passed: [deploy_qa-de-1]
        - get: kubernikus.builds
          resource: kubernikus.git
          passed: [deploy_qa-de-1]
        - get: hourly
          trigger: true
      - task: e2e_tests
        config:
          <<: *task_e2e_tests
        timeout: 45m
        params:
          <<: *auth_e2e_qa-de-1
        on_failure:
          put: slack-notification
          params:
            channel: '#kubernikus-ci'
            text: Soak tests in qa-de-1 failed
            text_file: test-result/content
            attachments:
              - text: $TEXT_FILE_CONTENT
                color: "#d00000"
                footer: $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
                footer_icon: https://ci.concourse-ci.org/public/images/favicon-failed.png

    on_success: { put: slack-alert, inputs: [], params: {alert_type: fixed } }
    on_abort:   { put: slack-alert, inputs: [], params: {alert_type: broke } }
    on_error:   { put: slack-alert, inputs: [], params: {alert_type: broke } }







groups:
  - name: deploy
    jobs:
      - docs
      - build
      - master
      - cli
      - whitesource
      - tiller_master
      - e2e
      - prod

      - ASIA

      - EMEA

      - AMERICAS

      - INFRA



  - name: ap-ae-1
    jobs:
      - ASIA
      - seed_ap-ae-1
      - tiller_ap-ae-1
      - deploy_ap-ae-1
      - soak_ap-ae-1

  - name: ap-au-1
    jobs:
      - ASIA
      - seed_ap-au-1
      - tiller_ap-au-1
      - deploy_ap-au-1
      - soak_ap-au-1

  - name: ap-cn-1
    jobs:
      - ASIA
      - seed_ap-cn-1
      - tiller_ap-cn-1
      - deploy_ap-cn-1
      - soak_ap-cn-1

  - name: ap-jp-1
    jobs:
      - ASIA
      - seed_ap-jp-1
      - tiller_ap-jp-1
      - deploy_ap-jp-1
      - soak_ap-jp-1

  - name: ap-jp-2
    jobs:
      - ASIA
      - seed_ap-jp-2
      - tiller_ap-jp-2
      - deploy_ap-jp-2
      - soak_ap-jp-2

  - name: ap-sa-1
    jobs:
      - ASIA
      - seed_ap-sa-1
      - tiller_ap-sa-1
      - deploy_ap-sa-1
      - soak_ap-sa-1

  - name: ap-sa-2
    jobs:
      - ASIA
      - seed_ap-sa-2
      - tiller_ap-sa-2
      - deploy_ap-sa-2
      - soak_ap-sa-2

  - name: eu-de-1
    jobs:
      - EMEA
      - seed_eu-de-1
      - tiller_eu-de-1
      - deploy_eu-de-1
      - soak_eu-de-1

  - name: eu-de-2
    jobs:
      - EMEA
      - seed_eu-de-2
      - tiller_eu-de-2
      - deploy_eu-de-2
      - soak_eu-de-2

  - name: eu-nl-1
    jobs:
      - EMEA
      - seed_eu-nl-1
      - tiller_eu-nl-1
      - deploy_eu-nl-1
      - soak_eu-nl-1

  - name: eu-ru-1
    jobs:
      - EMEA
      - seed_eu-ru-1
      - tiller_eu-ru-1
      - deploy_eu-ru-1
      - soak_eu-ru-1

  - name: la-br-1
    jobs:
      - AMERICAS
      - seed_la-br-1
      - tiller_la-br-1
      - deploy_la-br-1
      - soak_la-br-1

  - name: na-ca-1
    jobs:
      - AMERICAS
      - seed_na-ca-1
      - tiller_na-ca-1
      - deploy_na-ca-1
      - soak_na-ca-1

  - name: na-us-1
    jobs:
      - AMERICAS
      - seed_na-us-1
      - tiller_na-us-1
      - deploy_na-us-1
      - soak_na-us-1

  - name: na-us-2
    jobs:
      - AMERICAS
      - seed_na-us-2
      - tiller_na-us-2
      - deploy_na-us-2
      - soak_na-us-2

  - name: na-us-3
    jobs:
      - AMERICAS
      - seed_na-us-3
      - tiller_na-us-3
      - deploy_na-us-3
      - soak_na-us-3

  - name: qa-de-1
    jobs:
      - INFRA
      - seed_qa-de-1
      - tiller_qa-de-1
      - deploy_qa-de-1
      - soak_qa-de-1


  - name: WORLD
    jobs:
      - master
      - cli
      - whitesource
      - tiller_master
      - e2e
      - prod

      - ASIA

      - EMEA

      - AMERICAS

      - INFRA


      - seed_ap-ae-1
      - tiller_ap-ae-1
      - deploy_ap-ae-1
      - soak_ap-ae-1

      - seed_ap-au-1
      - tiller_ap-au-1
      - deploy_ap-au-1
      - soak_ap-au-1

      - seed_ap-cn-1
      - tiller_ap-cn-1
      - deploy_ap-cn-1
      - soak_ap-cn-1

      - seed_ap-jp-1
      - tiller_ap-jp-1
      - deploy_ap-jp-1
      - soak_ap-jp-1

      - seed_ap-jp-2
      - tiller_ap-jp-2
      - deploy_ap-jp-2
      - soak_ap-jp-2

      - seed_ap-sa-1
      - tiller_ap-sa-1
      - deploy_ap-sa-1
      - soak_ap-sa-1

      - seed_ap-sa-2
      - tiller_ap-sa-2
      - deploy_ap-sa-2
      - soak_ap-sa-2

      - seed_eu-de-1
      - tiller_eu-de-1
      - deploy_eu-de-1
      - soak_eu-de-1

      - seed_eu-de-2
      - tiller_eu-de-2
      - deploy_eu-de-2
      - soak_eu-de-2

      - seed_eu-nl-1
      - tiller_eu-nl-1
      - deploy_eu-nl-1
      - soak_eu-nl-1

      - seed_eu-ru-1
      - tiller_eu-ru-1
      - deploy_eu-ru-1
      - soak_eu-ru-1

      - seed_la-br-1
      - tiller_la-br-1
      - deploy_la-br-1
      - soak_la-br-1

      - seed_na-ca-1
      - tiller_na-ca-1
      - deploy_na-ca-1
      - soak_na-ca-1

      - seed_na-us-1
      - tiller_na-us-1
      - deploy_na-us-1
      - soak_na-us-1

      - seed_na-us-2
      - tiller_na-us-2
      - deploy_na-us-2
      - soak_na-us-2

      - seed_na-us-3
      - tiller_na-us-3
      - deploy_na-us-3
      - soak_na-us-3

      - seed_qa-de-1
      - tiller_qa-de-1
      - deploy_qa-de-1
      - soak_qa-de-1

