// This file was automatically generated by lister-gen

package v1

import (
	v1 "github.com/sapcc/kubernikus/pkg/apis/kubernikus/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ExternalNodeLister helps list ExternalNodes.
type ExternalNodeLister interface {
	// List lists all ExternalNodes in the indexer.
	List(selector labels.Selector) (ret []*v1.ExternalNode, err error)
	// ExternalNodes returns an object that can list and get ExternalNodes.
	ExternalNodes(namespace string) ExternalNodeNamespaceLister
	ExternalNodeListerExpansion
}

// externalNodeLister implements the ExternalNodeLister interface.
type externalNodeLister struct {
	indexer cache.Indexer
}

// NewExternalNodeLister returns a new ExternalNodeLister.
func NewExternalNodeLister(indexer cache.Indexer) ExternalNodeLister {
	return &externalNodeLister{indexer: indexer}
}

// List lists all ExternalNodes in the indexer.
func (s *externalNodeLister) List(selector labels.Selector) (ret []*v1.ExternalNode, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.ExternalNode))
	})
	return ret, err
}

// ExternalNodes returns an object that can list and get ExternalNodes.
func (s *externalNodeLister) ExternalNodes(namespace string) ExternalNodeNamespaceLister {
	return externalNodeNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ExternalNodeNamespaceLister helps list and get ExternalNodes.
type ExternalNodeNamespaceLister interface {
	// List lists all ExternalNodes in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.ExternalNode, err error)
	// Get retrieves the ExternalNode from the indexer for a given namespace and name.
	Get(name string) (*v1.ExternalNode, error)
	ExternalNodeNamespaceListerExpansion
}

// externalNodeNamespaceLister implements the ExternalNodeNamespaceLister
// interface.
type externalNodeNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ExternalNodes in the indexer for a given namespace.
func (s externalNodeNamespaceLister) List(selector labels.Selector) (ret []*v1.ExternalNode, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.ExternalNode))
	})
	return ret, err
}

// Get retrieves the ExternalNode from the indexer for a given namespace and name.
func (s externalNodeNamespaceLister) Get(name string) (*v1.ExternalNode, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("externalnode"), name)
	}
	return obj.(*v1.ExternalNode), nil
}
