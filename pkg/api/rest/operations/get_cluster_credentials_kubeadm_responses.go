// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/sapcc/kubernikus/pkg/api/models"
)

// GetClusterCredentialsKubeadmOKCode is the HTTP code returned for type GetClusterCredentialsKubeadmOK
const GetClusterCredentialsKubeadmOKCode int = 200

/*
GetClusterCredentialsKubeadmOK OK

swagger:response getClusterCredentialsKubeadmOK
*/
type GetClusterCredentialsKubeadmOK struct {

	/*
	  In: Body
	*/
	Payload *models.KubeadmSecret `json:"body,omitempty"`
}

// NewGetClusterCredentialsKubeadmOK creates GetClusterCredentialsKubeadmOK with default headers values
func NewGetClusterCredentialsKubeadmOK() *GetClusterCredentialsKubeadmOK {

	return &GetClusterCredentialsKubeadmOK{}
}

// WithPayload adds the payload to the get cluster credentials kubeadm o k response
func (o *GetClusterCredentialsKubeadmOK) WithPayload(payload *models.KubeadmSecret) *GetClusterCredentialsKubeadmOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get cluster credentials kubeadm o k response
func (o *GetClusterCredentialsKubeadmOK) SetPayload(payload *models.KubeadmSecret) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetClusterCredentialsKubeadmOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*
GetClusterCredentialsKubeadmDefault Error

swagger:response getClusterCredentialsKubeadmDefault
*/
type GetClusterCredentialsKubeadmDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetClusterCredentialsKubeadmDefault creates GetClusterCredentialsKubeadmDefault with default headers values
func NewGetClusterCredentialsKubeadmDefault(code int) *GetClusterCredentialsKubeadmDefault {
	if code <= 0 {
		code = 500
	}

	return &GetClusterCredentialsKubeadmDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get cluster credentials kubeadm default response
func (o *GetClusterCredentialsKubeadmDefault) WithStatusCode(code int) *GetClusterCredentialsKubeadmDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get cluster credentials kubeadm default response
func (o *GetClusterCredentialsKubeadmDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get cluster credentials kubeadm default response
func (o *GetClusterCredentialsKubeadmDefault) WithPayload(payload *models.Error) *GetClusterCredentialsKubeadmDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get cluster credentials kubeadm default response
func (o *GetClusterCredentialsKubeadmDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetClusterCredentialsKubeadmDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
