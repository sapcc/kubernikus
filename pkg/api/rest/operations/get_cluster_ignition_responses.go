// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/sapcc/kubernikus/pkg/api/models"
)

// GetClusterIgnitionOKCode is the HTTP code returned for type GetClusterIgnitionOK
const GetClusterIgnitionOKCode int = 200

/*GetClusterIgnitionOK OK

swagger:response getClusterIgnitionOK
*/
type GetClusterIgnitionOK struct {

	/*
	  In: Body
	*/
	Payload models.Ignition `json:"body,omitempty"`
}

// NewGetClusterIgnitionOK creates GetClusterIgnitionOK with default headers values
func NewGetClusterIgnitionOK() *GetClusterIgnitionOK {
	return &GetClusterIgnitionOK{}
}

// WithPayload adds the payload to the get cluster ignition o k response
func (o *GetClusterIgnitionOK) WithPayload(payload models.Ignition) *GetClusterIgnitionOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get cluster ignition o k response
func (o *GetClusterIgnitionOK) SetPayload(payload models.Ignition) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetClusterIgnitionOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

/*GetClusterIgnitionDefault Error

swagger:response getClusterIgnitionDefault
*/
type GetClusterIgnitionDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetClusterIgnitionDefault creates GetClusterIgnitionDefault with default headers values
func NewGetClusterIgnitionDefault(code int) *GetClusterIgnitionDefault {
	if code <= 0 {
		code = 500
	}

	return &GetClusterIgnitionDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get cluster ignition default response
func (o *GetClusterIgnitionDefault) WithStatusCode(code int) *GetClusterIgnitionDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get cluster ignition default response
func (o *GetClusterIgnitionDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get cluster ignition default response
func (o *GetClusterIgnitionDefault) WithPayload(payload *models.Error) *GetClusterIgnitionDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get cluster ignition default response
func (o *GetClusterIgnitionDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetClusterIgnitionDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
