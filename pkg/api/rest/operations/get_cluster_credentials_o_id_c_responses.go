// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/sapcc/kubernikus/pkg/api/models"
)

// GetClusterCredentialsOIDCOKCode is the HTTP code returned for type GetClusterCredentialsOIDCOK
const GetClusterCredentialsOIDCOKCode int = 200

/*GetClusterCredentialsOIDCOK OK

swagger:response getClusterCredentialsOIdCOK
*/
type GetClusterCredentialsOIDCOK struct {

	/*
	  In: Body
	*/
	Payload *models.Credentials `json:"body,omitempty"`
}

// NewGetClusterCredentialsOIDCOK creates GetClusterCredentialsOIDCOK with default headers values
func NewGetClusterCredentialsOIDCOK() *GetClusterCredentialsOIDCOK {

	return &GetClusterCredentialsOIDCOK{}
}

// WithPayload adds the payload to the get cluster credentials o Id c o k response
func (o *GetClusterCredentialsOIDCOK) WithPayload(payload *models.Credentials) *GetClusterCredentialsOIDCOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get cluster credentials o Id c o k response
func (o *GetClusterCredentialsOIDCOK) SetPayload(payload *models.Credentials) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetClusterCredentialsOIDCOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*GetClusterCredentialsOIDCDefault Error

swagger:response getClusterCredentialsOIdCDefault
*/
type GetClusterCredentialsOIDCDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetClusterCredentialsOIDCDefault creates GetClusterCredentialsOIDCDefault with default headers values
func NewGetClusterCredentialsOIDCDefault(code int) *GetClusterCredentialsOIDCDefault {
	if code <= 0 {
		code = 500
	}

	return &GetClusterCredentialsOIDCDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get cluster credentials o ID c default response
func (o *GetClusterCredentialsOIDCDefault) WithStatusCode(code int) *GetClusterCredentialsOIDCDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get cluster credentials o ID c default response
func (o *GetClusterCredentialsOIDCDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get cluster credentials o ID c default response
func (o *GetClusterCredentialsOIDCDefault) WithPayload(payload *models.Error) *GetClusterCredentialsOIDCDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get cluster credentials o ID c default response
func (o *GetClusterCredentialsOIDCDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetClusterCredentialsOIDCDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
