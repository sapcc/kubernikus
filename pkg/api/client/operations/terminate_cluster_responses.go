// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/sapcc/kubernikus/pkg/api/models"
)

// TerminateClusterReader is a Reader for the TerminateCluster structure.
type TerminateClusterReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *TerminateClusterReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 202:
		result := NewTerminateClusterAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewTerminateClusterDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewTerminateClusterAccepted creates a TerminateClusterAccepted with default headers values
func NewTerminateClusterAccepted() *TerminateClusterAccepted {
	return &TerminateClusterAccepted{}
}

/*TerminateClusterAccepted handles this case with default header values.

OK
*/
type TerminateClusterAccepted struct {
}

func (o *TerminateClusterAccepted) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/clusters/{name}][%d] terminateClusterAccepted ", 202)
}

func (o *TerminateClusterAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewTerminateClusterDefault creates a TerminateClusterDefault with default headers values
func NewTerminateClusterDefault(code int) *TerminateClusterDefault {
	return &TerminateClusterDefault{
		_statusCode: code,
	}
}

/*TerminateClusterDefault handles this case with default header values.

Error
*/
type TerminateClusterDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the terminate cluster default response
func (o *TerminateClusterDefault) Code() int {
	return o._statusCode
}

func (o *TerminateClusterDefault) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/clusters/{name}][%d] TerminateCluster default  %+v", o._statusCode, o.Payload)
}

func (o *TerminateClusterDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
